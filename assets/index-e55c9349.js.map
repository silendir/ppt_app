{"version":3,"mappings":"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","names":["AVAILABLE_THEMES","id","name","CUSTOM_THEMES","bespoke","elegant","corporate","creative","minimal","ensureMarpMetadata","markdown","theme","startsWith","includes","replace","exportToPDF","_0","__async","this","arguments","filename","options","renderResult","Marp","__vitePreload","import","then","n","m","marp","inlineSVG","html","math","minifyCSS","Object","entries","forEach","themeId","css","themeSet","add","processedMarkdown","comments","render","rawHtml","slideCount","match","length","error","renderMarkdownToHTML","fullHTML","printWindow","window","open","Error","tempDiv","document","createElement","innerHTML","styleContent","_a","querySelector","htmlClose","bodyClose","divClose","cssContent","scriptContent","htmlContent","write","close","exportToPPTX","pptxgenModule","pptxgen","default","slides","split","filter","slide","trim","pptx","defineLayout","width","height","layout","themeColors","background","title","text","accent","gaia","uncover","colors","i","slideContent","addSlide","color","titleMatch","subtitleMatch","subtitle","content","isCoverSlide","addText","x","y","w","fontSize","bold","align","lists","orderedLists","list","tables","table","images","img","remainingText","formattedText","h","bullet","index","listItems","item","map","type","tableText","tableRows","row","cell","headerRow","dataRows","slice","tableData","tableColWidth","push","addTable","border","pt","imgText","imgUrlMatch","imgUrl","addImage","path","writeFile","fileName","getAvailableThemes","_hoisted_1","class","_hoisted_2","_hoisted_3","key","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","props","String","required","initialTheme","emits","setup","emit","renderedHTML","ref","isLoading","currentSlide","selectedTheme","availableThemes","currentThemeName","computed","value","find","t","renderMarkdown","markdownContent","slideMatches","metadataEnd","indexOf","substring","RegExp","message","prevSlide","navigateToSlide","nextSlide","sections","querySelectorAll","scrollIntoView","behavior","handleKeyDown","e","watch","newTheme","onMounted","addEventListener","onBeforeUnmount","removeEventListener","changeTheme","exportPDF","exportingMessage","style","position","top","left","transform","padding","backgroundColor","borderRadius","zIndex","fontWeight","boxShadow","minWidth","textAlign","textContent","body","appendChild","previewElement","setTimeout","removeChild","alert","exportPPTX","_createElementBlock","onClick","_cache","_withModifiers","_ctx","$emit","_createElementVNode","$setup","_openBlock","_hoisted_4","_toDisplayString","_createCommentVNode","for","$event","onChange","args","_Fragment","_renderList","_createTextVNode","_createVNode","_Transition","_withCtx","_hoisted_10","_","disabled","compatibilityService","checkWebGPUSupport","navigator","gpu","supported","reason","adapter","requestAdapter","device","requestDevice","checkWebGLSupport","canvas","gl","getContext","version","WebGL2RenderingContext","context","checkDevicePerformance","memory","deviceMemory","cores","hardwareConcurrency","performanceScore","performanceTier","getBrowserInfo","userAgent","browserName","browserVersion","isMobileDevice","test","getFullCompatibilityReport","webgpuSupport","webglSupport","performance","browserInfo","isMobile","recommendedStrategy","expectedPerformance","browser","webgpu","webgl","cacheService","constructor","dbName","storeName","db","initDB","Promise","resolve","reject","request","indexedDB","onupgradeneeded","event","target","result","objectStoreNames","contains","createObjectStore","onsuccess","onerror","hasModel","modelId","transaction","objectStore","get","saveModel","modelData","put","getModel","deleteModel","delete","clearCache","clear","progressiveLoadService","__spreadValues","modelUrl","chunkSize","totalChunks","loadedChunks","totalSize","abortController","progress","metadataKey","determineOptimalChunkSize","testUrl","join","startTime","Date","now","fetch","method","cache","signal","AbortSignal","timeout","responseTime","getModelMetadata","saveModelMetadata","metadata","isModelFullyCached","chunkId","getModelSize","response","ok","status","statusText","contentLength","parseInt","headers","downloadModelInChunks","callbacks","AbortController","Math","ceil","timestamp","ArrayBuffer","modelView","Uint8Array","downloadTasks","start","end","min","chunkData","set","onProgress","onComplete","task","aborted","Range","chunkBuffer","arrayBuffer","onError","loadModelFromCache","loadModel","cancelDownload","abort","clearModelCache","WebLLMModelService","modelSize","quantization","useWebGPU","useProgressiveLoading","model","chat","loadingStage","systemPrompt","isModelLoaded","getProgress","getLoadingStage","webllm","CreateMLCEngine","initProgressCallback","ChatModule","toString","createChatModule","completions","initOptions","wasmUrl","init","isCached","p","modelConfig","model_list","model_id","model_url","local_id","reload","setInitProgressCallback","report","stage","resetChat","onSuccess","generateMarpMarkdown","prompt","generateOptions","stream","max_tokens","temperature","top_p","fullPrompt","messages","role","create","choices","generate","getMessage","unloadModel","unload","dispose","WebGPUModelService","generateDummyMarkdown","WebGLModelService","WasmModelService","RemoteAPIModelService","apiEndpoint","modelServiceFactory","createModelService","compatibilityReport","forceService","__spreadProps","getModelServiceOptions","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","_hoisted_61","app","createApp","components","MarpPreview","modelLoaded","isGenerating","showPreview","showSettings","showHelp","isEditingMarkdown","modelService","executionMode","presentationStyle","generatedSlideCount","modelServiceOptions","compatibilityInfo","accelerationMethod","progressText","round","newMode","newMarkdown","separatorCount","checkCompatibility","generatePresentation","academic","ctrlKey","examplePrompts","clearPrompt","insertTemplate","useExamplePrompt","example","editMarkdown","previewPresentation","updateTheme","handleExport","exportInfo","_hoisted_21","placeholder","rows","_createStaticVNode","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_43","_normalizeStyle","_normalizeClass","option","_createBlock","_component_MarpPreview","onClose","onThemeChange","onExport","getFullYear","config","errorHandler","err","vm","info","mount"],"sources":["../../src/services/exportService.js","../../src/components/MarpPreview.vue","../../src/services/compatibilityService.js","../../src/services/cacheService.js","../../src/services/progressiveLoadService.js","../../src/services/webllmModelService.js","../../src/services/webgpuModelService.js","../../src/services/webglModelService.js","../../src/services/wasmModelService.js","../../src/services/remoteAPIModelService.js","../../src/services/modelServiceFactory.js","../../src/App.vue","../../src/main.js"],"sourcesContent":["/**\n * 导出服务\n * 负责Markdown转换与输出为不同格式\n */\n\n// 可用的主题列表\nexport const AVAILABLE_THEMES = [\n  { id: 'default', name: '默认主题' },\n  { id: 'gaia', name: 'Gaia' },\n  { id: 'uncover', name: 'Uncover' },\n  { id: 'bespoke', name: '现代简约' },\n  { id: 'elegant', name: '优雅蓝' },\n  { id: 'corporate', name: '商务专业' },\n  { id: 'creative', name: '创意设计' },\n  { id: 'minimal', name: '极简黑白' }\n];\n\n// 自定义主题CSS\nconst CUSTOM_THEMES = {\n  bespoke: `\n/* @theme bespoke */\nsection {\n  background: #fafafa;\n  color: #333;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n\nh1 {\n  font-size: 2.5rem;\n  color: #2563eb;\n  margin-bottom: 1rem;\n}\n\nh2 {\n  font-size: 2rem;\n  color: #3b82f6;\n  margin-bottom: 0.8rem;\n}\n\nh3 {\n  font-size: 1.5rem;\n  color: #60a5fa;\n  margin-bottom: 0.6rem;\n}\n\nul, ol {\n  margin-left: 1.5rem;\n  line-height: 1.6;\n}\n\nli {\n  margin-bottom: 0.5rem;\n}\n\nstrong {\n  color: #1e40af;\n}\n\nsection::after {\n  content: attr(data-marpit-pagination) '/' attr(data-marpit-pagination-total);\n  font-size: 0.8rem;\n  color: #94a3b8;\n  position: absolute;\n  bottom: 1rem;\n  right: 1rem;\n}\n\nimg {\n  max-width: 100%;\n  height: auto;\n  border-radius: 4px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\nblockquote {\n  border-left: 4px solid #3b82f6;\n  padding-left: 1rem;\n  color: #64748b;\n  font-style: italic;\n}\n\ntable {\n  border-collapse: collapse;\n  width: 100%;\n  margin: 1rem 0;\n}\n\nth, td {\n  border: 1px solid #e2e8f0;\n  padding: 0.5rem;\n  text-align: left;\n}\n\nth {\n  background-color: #f1f5f9;\n  font-weight: bold;\n}\n\ncode {\n  background-color: #f1f5f9;\n  padding: 0.2rem 0.4rem;\n  border-radius: 4px;\n  font-family: 'Courier New', Courier, monospace;\n}\n\nsection.title {\n  background: linear-gradient(135deg, #2563eb, #3b82f6);\n  color: white;\n  text-align: center;\n}\n\nsection.title h1 {\n  color: white;\n  font-size: 3rem;\n}\n\nsection.title h2 {\n  color: rgba(255, 255, 255, 0.9);\n  font-weight: normal;\n}\n`,\n\n  elegant: `\n/* @theme elegant */\nsection {\n  background: linear-gradient(to bottom right, #f8f9fa, #e9ecef);\n  color: #212529;\n  font-family: 'Georgia', serif;\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  border-top: 8px solid #4361ee;\n}\n\nh1 {\n  font-size: 2.5rem;\n  color: #1e40af;\n  margin-bottom: 1rem;\n  font-weight: normal;\n  letter-spacing: -0.5px;\n  border-bottom: 1px solid #dee2e6;\n  padding-bottom: 0.5rem;\n}\n\nh2 {\n  font-size: 2rem;\n  color: #3b82f6;\n  margin-bottom: 0.8rem;\n  font-weight: normal;\n}\n\nh3 {\n  font-size: 1.5rem;\n  color: #4f46e5;\n  margin-bottom: 0.6rem;\n  font-style: italic;\n}\n\nul, ol {\n  margin-left: 1.5rem;\n  line-height: 1.7;\n}\n\nli {\n  margin-bottom: 0.7rem;\n  position: relative;\n}\n\nli::marker {\n  color: #4361ee;\n}\n\nstrong {\n  color: #1e3a8a;\n  font-weight: 600;\n}\n\nem {\n  color: #4f46e5;\n  font-style: italic;\n}\n\nsection::after {\n  content: attr(data-marpit-pagination) '/' attr(data-marpit-pagination-total);\n  font-size: 0.9rem;\n  color: #6c757d;\n  position: absolute;\n  bottom: 1rem;\n  right: 1rem;\n  font-family: 'Georgia', serif;\n  font-style: italic;\n}\n\nimg {\n  max-width: 100%;\n  height: auto;\n  border-radius: 4px;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n  border: 1px solid #dee2e6;\n}\n\nblockquote {\n  border-left: 3px solid #4361ee;\n  padding: 0.5rem 0 0.5rem 1.5rem;\n  margin: 1.5rem 0;\n  color: #495057;\n  font-style: italic;\n  background-color: rgba(67, 97, 238, 0.05);\n}\n\ntable {\n  border-collapse: collapse;\n  width: 100%;\n  margin: 1.5rem 0;\n  border: 1px solid #dee2e6;\n}\n\nth, td {\n  border: 1px solid #dee2e6;\n  padding: 0.75rem;\n  text-align: left;\n}\n\nth {\n  background-color: #e9ecef;\n  color: #212529;\n  font-weight: bold;\n}\n\ntr:nth-child(even) {\n  background-color: #f8f9fa;\n}\n\ncode {\n  font-family: 'Consolas', monospace;\n  background-color: #f8f9fa;\n  padding: 0.2rem 0.4rem;\n  border-radius: 4px;\n  color: #e83e8c;\n  border: 1px solid #dee2e6;\n}\n\nsection.title {\n  background: linear-gradient(135deg, #1e3a8a, #4361ee);\n  color: white;\n  text-align: center;\n  border-top: none;\n}\n\nsection.title h1 {\n  color: white;\n  font-size: 3rem;\n  border-bottom: none;\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n}\n\nsection.title h2 {\n  color: rgba(255, 255, 255, 0.9);\n  font-weight: normal;\n}\n`,\n\n  corporate: `\n/* @theme corporate */\nsection {\n  background: white;\n  color: #333;\n  font-family: 'Arial', sans-serif;\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  border-left: 10px solid #0a66c2;\n}\n\nh1 {\n  font-size: 2.4rem;\n  color: #0a66c2;\n  margin-bottom: 1rem;\n  font-weight: bold;\n}\n\nh2 {\n  font-size: 1.8rem;\n  color: #0a66c2;\n  margin-bottom: 0.8rem;\n  font-weight: bold;\n}\n\nh3 {\n  font-size: 1.4rem;\n  color: #0a66c2;\n  margin-bottom: 0.6rem;\n  font-weight: bold;\n}\n\nul, ol {\n  margin-left: 1.5rem;\n  line-height: 1.6;\n}\n\nli {\n  margin-bottom: 0.5rem;\n  position: relative;\n}\n\nli::marker {\n  color: #0a66c2;\n}\n\nstrong {\n  color: #0a66c2;\n  font-weight: bold;\n}\n\nsection::after {\n  content: attr(data-marpit-pagination) '/' attr(data-marpit-pagination-total);\n  font-size: 0.8rem;\n  color: #666;\n  position: absolute;\n  bottom: 1rem;\n  right: 1rem;\n}\n\nimg {\n  max-width: 100%;\n  height: auto;\n  border: 1px solid #e0e0e0;\n}\n\nblockquote {\n  border-left: 4px solid #0a66c2;\n  padding-left: 1rem;\n  color: #666;\n  font-style: italic;\n}\n\ntable {\n  border-collapse: collapse;\n  width: 100%;\n  margin: 1rem 0;\n}\n\nth, td {\n  border: 1px solid #e0e0e0;\n  padding: 0.75rem;\n  text-align: left;\n}\n\nth {\n  background-color: #0a66c2;\n  color: white;\n  font-weight: bold;\n}\n\ntr:nth-child(even) {\n  background-color: #f5f5f5;\n}\n\ncode {\n  background-color: #f5f5f5;\n  padding: 0.2rem 0.4rem;\n  border-radius: 2px;\n  font-family: 'Courier New', Courier, monospace;\n  color: #0a66c2;\n}\n\nsection.title {\n  background: linear-gradient(to right, #0a66c2, #0077b6);\n  color: white;\n  text-align: center;\n  border-left: none;\n}\n\nsection.title h1 {\n  color: white;\n  font-size: 2.8rem;\n}\n\nsection.title h2 {\n  color: rgba(255, 255, 255, 0.9);\n  font-weight: normal;\n}\n\nsection.title::before {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 5px;\n  background: linear-gradient(to right, #0a66c2, #0077b6);\n}\n`,\n\n  creative: `\n/* @theme creative */\nsection {\n  background: #fefefe;\n  color: #333;\n  font-family: 'Montserrat', sans-serif;\n  padding: 2.5rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background-image:\n    radial-gradient(circle at 10% 20%, rgba(255, 107, 107, 0.05) 0%, transparent 20%),\n    radial-gradient(circle at 90% 80%, rgba(107, 107, 255, 0.05) 0%, transparent 20%);\n  border-radius: 10px;\n  overflow: hidden;\n}\n\nh1 {\n  font-size: 2.8rem;\n  color: #ff6b6b;\n  margin-bottom: 1.2rem;\n  font-weight: 700;\n  letter-spacing: -1px;\n  position: relative;\n}\n\nh1::after {\n  content: '';\n  position: absolute;\n  bottom: -10px;\n  left: 0;\n  width: 50px;\n  height: 4px;\n  background: #ff6b6b;\n  border-radius: 2px;\n}\n\nh2 {\n  font-size: 2.2rem;\n  color: #6b6bff;\n  margin-bottom: 1rem;\n  font-weight: 600;\n}\n\nh3 {\n  font-size: 1.6rem;\n  color: #6b6bff;\n  margin-bottom: 0.8rem;\n  font-weight: 600;\n}\n\nul, ol {\n  margin-left: 1.5rem;\n  line-height: 1.7;\n}\n\nli {\n  margin-bottom: 0.7rem;\n  position: relative;\n}\n\nli::marker {\n  color: #ff6b6b;\n}\n\nstrong {\n  color: #ff6b6b;\n  font-weight: 700;\n}\n\nem {\n  color: #6b6bff;\n  font-style: italic;\n}\n\nsection::after {\n  content: attr(data-marpit-pagination) '/' attr(data-marpit-pagination-total);\n  font-size: 0.9rem;\n  color: #888;\n  position: absolute;\n  bottom: 1rem;\n  right: 1rem;\n  font-family: 'Montserrat', sans-serif;\n  font-weight: 500;\n}\n\nimg {\n  max-width: 100%;\n  height: auto;\n  border-radius: 10px;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n}\n\nblockquote {\n  border-left: 4px solid #ff6b6b;\n  padding: 0.8rem 0 0.8rem 1.5rem;\n  margin: 1.5rem 0;\n  color: #666;\n  font-style: italic;\n  background-color: rgba(255, 107, 107, 0.05);\n  border-radius: 0 10px 10px 0;\n}\n\ntable {\n  border-collapse: collapse;\n  width: 100%;\n  margin: 1.5rem 0;\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);\n}\n\nth, td {\n  padding: 1rem;\n  text-align: left;\n}\n\nth {\n  background-color: #ff6b6b;\n  color: white;\n  font-weight: 600;\n}\n\ntr:nth-child(even) {\n  background-color: #f9f9f9;\n}\n\ntr:hover {\n  background-color: #f5f5f5;\n}\n\ncode {\n  font-family: 'Fira Code', monospace;\n  background-color: #f5f5f5;\n  padding: 0.2rem 0.5rem;\n  border-radius: 5px;\n  color: #ff6b6b;\n  font-size: 0.9em;\n}\n\nsection.title {\n  background: linear-gradient(135deg, #ff6b6b, #6b6bff);\n  color: white;\n  text-align: center;\n}\n\nsection.title h1 {\n  color: white;\n  font-size: 3.5rem;\n  text-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n}\n\nsection.title h1::after {\n  background: white;\n  width: 100px;\n  left: 50%;\n  transform: translateX(-50%);\n}\n\nsection.title h2 {\n  color: rgba(255, 255, 255, 0.9);\n  font-weight: 400;\n}\n`,\n\n  minimal: `\n/* @theme minimal */\nsection {\n  background: white;\n  color: #222;\n  font-family: 'Helvetica Neue', Arial, sans-serif;\n  padding: 3rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n\nh1 {\n  font-size: 2.5rem;\n  color: black;\n  margin-bottom: 1.5rem;\n  font-weight: 700;\n  letter-spacing: -0.5px;\n}\n\nh2 {\n  font-size: 2rem;\n  color: #333;\n  margin-bottom: 1.2rem;\n  font-weight: 600;\n}\n\nh3 {\n  font-size: 1.5rem;\n  color: #444;\n  margin-bottom: 1rem;\n  font-weight: 600;\n}\n\nul, ol {\n  margin-left: 1.5rem;\n  line-height: 1.6;\n}\n\nli {\n  margin-bottom: 0.8rem;\n}\n\nstrong {\n  font-weight: 700;\n}\n\nsection::after {\n  content: attr(data-marpit-pagination);\n  font-size: 0.8rem;\n  color: #999;\n  position: absolute;\n  bottom: 1rem;\n  right: 1rem;\n}\n\nimg {\n  max-width: 100%;\n  height: auto;\n  border: none;\n}\n\nblockquote {\n  border-left: 2px solid #ddd;\n  padding-left: 1rem;\n  color: #666;\n  font-style: italic;\n}\n\ntable {\n  border-collapse: collapse;\n  width: 100%;\n  margin: 1.5rem 0;\n}\n\nth, td {\n  border-bottom: 1px solid #eee;\n  padding: 0.75rem;\n  text-align: left;\n}\n\nth {\n  border-bottom: 2px solid #ddd;\n  font-weight: 700;\n}\n\ncode {\n  font-family: 'SF Mono', Menlo, Monaco, Consolas, monospace;\n  background-color: #f5f5f5;\n  padding: 0.2rem 0.4rem;\n  border-radius: 3px;\n  font-size: 0.9em;\n}\n\nsection.title {\n  background: black;\n  color: white;\n  text-align: center;\n}\n\nsection.title h1 {\n  color: white;\n  font-size: 3rem;\n}\n\nsection.title h2 {\n  color: rgba(255, 255, 255, 0.8);\n  font-weight: 400;\n}\n`\n};\n\n/**\n * 确保Markdown包含Marp前置元数据\n * @param {String} markdown Markdown内容\n * @param {String} theme 主题名称\n * @returns {String} 添加了Marp元数据的Markdown\n */\nfunction ensureMarpMetadata(markdown, theme = 'default') {\n  // 检查是否已有前置元数据\n  if (markdown.startsWith('---\\n')) {\n    // 已有元数据，检查是否包含marp: true\n    if (!markdown.includes('marp: true')) {\n      // 在元数据中添加marp: true\n      markdown = markdown.replace('---\\n', '---\\nmarp: true\\n');\n    }\n\n    // 检查是否已有theme设置\n    if (!markdown.includes('theme:')) {\n      // 在元数据中添加theme\n      markdown = markdown.replace('---\\n', `---\\ntheme: ${theme}\\n`);\n    } else {\n      // 替换现有theme\n      markdown = markdown.replace(/theme:.*\\n/, `theme: ${theme}\\n`);\n    }\n\n    // 检查是否已有paginate设置\n    if (!markdown.includes('paginate:')) {\n      // 在元数据中添加paginate\n      markdown = markdown.replace('---\\n', '---\\npaginate: true\\n');\n    }\n\n    return markdown;\n  } else {\n    // 没有元数据，添加完整元数据\n    return `---\nmarp: true\ntheme: ${theme}\npaginate: true\n---\n\n${markdown}`;\n  }\n}\n\n/**\n * 将Markdown渲染为HTML\n * @param {String} markdown Markdown内容\n * @param {String} theme 主题名称\n * @returns {Promise<Object>} 渲染结果，包含HTML和CSS\n */\nasync function renderMarkdownToHTML(markdown, theme = 'default') {\n  try {\n    // 动态导入Marp库以减小初始加载体积\n    const { Marp } = await import('@marp-team/marp-core');\n\n    // 创建Marp实例\n    const marp = new Marp({\n      inlineSVG: true,\n      html: true, // 允许HTML标签\n      math: true, // 支持数学公式\n      minifyCSS: false // 不压缩CSS以便于调试\n    });\n\n    // 添加自定义主题\n    Object.entries(CUSTOM_THEMES).forEach(([themeId, css]) => {\n      marp.themeSet.add(css);\n    });\n\n    // 确保Markdown包含正确的元数据\n    const processedMarkdown = ensureMarpMetadata(markdown, theme);\n\n    // 渲染Markdown\n    const { html, css, comments } = marp.render(processedMarkdown);\n\n    // 将CSS嵌入到HTML中\n    const fullHTML = `\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>jsPPT演示文稿</title>\n  <style>\n    /* 基础样式 */\n    body {\n      margin: 0;\n      padding: 0;\n      background-color: #f0f0f0;\n    }\n    .marp-container {\n      width: 100%;\n      height: 100%;\n      overflow: auto;\n    }\n    /* Marp主题样式 */\n    ${css}\n    /* 打印优化 */\n    @media print {\n      body {\n        background-color: white;\n      }\n      .marp-container {\n        width: 100%;\n        height: auto;\n      }\n    }\n  </style>\n  <script>\n    // 简单的幻灯片导航功能\n    document.addEventListener('DOMContentLoaded', () => {\n      const sections = document.querySelectorAll('section');\n      let currentSlide = 0;\n\n      function goToSlide(index) {\n        if (index >= 0 && index < sections.length) {\n          sections[currentSlide].style.display = 'none';\n          currentSlide = index;\n          sections[currentSlide].style.display = 'flex';\n        }\n      }\n\n      // 初始化显示第一张幻灯片\n      sections.forEach((section, index) => {\n        section.style.display = index === 0 ? 'flex' : 'none';\n      });\n\n      // 键盘导航\n      document.addEventListener('keydown', (e) => {\n        if (e.key === 'ArrowRight' || e.key === 'PageDown' || e.key === ' ') {\n          goToSlide(currentSlide + 1);\n        } else if (e.key === 'ArrowLeft' || e.key === 'PageUp') {\n          goToSlide(currentSlide - 1);\n        } else if (e.key === 'Home') {\n          goToSlide(0);\n        } else if (e.key === 'End') {\n          goToSlide(sections.length - 1);\n        }\n      });\n\n      // 添加触摸滑动支持\n      let touchStartX = 0;\n      document.addEventListener('touchstart', (e) => {\n        touchStartX = e.touches[0].clientX;\n      });\n      document.addEventListener('touchend', (e) => {\n        const touchEndX = e.changedTouches[0].clientX;\n        const diff = touchStartX - touchEndX;\n\n        if (Math.abs(diff) > 50) { // 最小滑动距离\n          if (diff > 0) {\n            // 向左滑动，下一张\n            goToSlide(currentSlide + 1);\n          } else {\n            // 向右滑动，上一张\n            goToSlide(currentSlide - 1);\n          }\n        }\n      });\n    });\n  </script>\n</head>\n<body>\n  <div class=\"marp-container\">\n    ${html}\n  </div>\n</body>\n</html>\n    `;\n\n    return {\n      html: fullHTML,\n      rawHtml: html,\n      css,\n      comments,\n      slideCount: (html.match(/<section/g) || []).length\n    };\n  } catch (error) {\n    console.error('Markdown渲染失败:', error);\n    throw error;\n  }\n}\n\n/**\n * 导出为PDF\n * @param {String} markdown Markdown内容\n * @param {String} filename 文件名\n * @param {String} theme 主题名称\n * @param {Object} options 导出选项\n * @returns {Promise<Boolean>} 是否导出成功\n */\n/**\n * 导出为PDF（使用浏览器打印功能）\n *\n * 注意：此函数不再使用jsPDF库，而是直接使用浏览器的打印功能\n * 这样可以避免\"Cannot access uninitialized variable\"等错误\n *\n * @param {String} markdown Markdown内容\n * @param {String} filename 文件名（仅用于显示，实际文件名由浏览器打印功能决定）\n * @param {String} theme 主题名称\n * @param {Object} options 导出选项（仅用于兼容旧代码，不再使用）\n * @returns {Promise<Boolean>} 是否成功打开打印预览\n */\nexport async function exportToPDF(markdown, filename = 'presentation.pdf', theme = 'default', options = {}) {\n  try {\n    // 渲染Markdown为HTML\n    const renderResult = await renderMarkdownToHTML(markdown, theme);\n    const { html: fullHTML, slideCount } = renderResult;\n\n    // 创建一个打印窗口\n    const printWindow = window.open('', '_blank');\n    if (!printWindow) {\n      throw new Error('无法打开打印窗口，请检查浏览器是否阻止了弹出窗口');\n    }\n\n    // 提取样式\n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = fullHTML;\n    const styleContent = tempDiv.querySelector('style')?.innerHTML || '';\n\n    // 使用字符串变量拼接HTML，避免Vue编译器解析HTML标签\n    const doctype = '<!DOCTYPE html>';\n    const htmlOpen = '<html>';\n    const htmlClose = '</html>';\n    const headOpen = '<head>';\n    const headClose = '</head>';\n    const bodyOpen = '<body>';\n    const bodyClose = '</body>';\n    const title = '<title>jsPPT演示文稿</title>';\n    const styleOpen = '<style>';\n    const styleClose = '</style>';\n    const divOpen = '<div class=\"print-container\">';\n    const divClose = '</div>';\n\n    // 创建样式内容\n    const cssContent = `\n      body { margin: 0; padding: 0; }\n      .print-container { width: 100%; }\n      section {\n        page-break-after: always;\n        height: 100vh;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        padding: 40px;\n        box-sizing: border-box;\n      }\n      section:last-child { page-break-after: auto; }\n      @media print {\n        body { background: white; }\n        section {\n          height: 100%;\n          page-break-inside: avoid;\n        }\n      }\n      ${styleContent}\n    `;\n\n    // 创建脚本内容\n    const scriptOpen = '<scr' + 'ipt>';\n    const scriptClose = '</scr' + 'ipt>';\n    const scriptBody = `\n      // 自动打印\n      window.onload = function() {\n        setTimeout(function() {\n          window.print();\n        }, 500);\n      };\n    `;\n    const scriptContent = scriptOpen + scriptBody + scriptClose;\n\n    // 组合HTML内容\n    const htmlContent =\n      doctype +\n      htmlOpen +\n      headOpen +\n      title +\n      styleOpen +\n      cssContent +\n      styleClose +\n      headClose +\n      bodyOpen +\n      divOpen +\n      tempDiv.innerHTML +\n      divClose +\n      scriptContent +\n      bodyClose +\n      htmlClose;\n\n    // 写入HTML内容\n    printWindow.document.write(htmlContent);\n    printWindow.document.close();\n\n    console.log(`成功打开PDF打印预览，共${slideCount}张幻灯片`);\n    return true;\n  } catch (error) {\n    console.error('PDF导出失败:', error);\n    throw error;\n  }\n}\n\n/**\n * 导出为PPTX\n * @param {String} markdown Markdown内容\n * @param {String} filename 文件名\n * @param {String} theme 主题名称\n * @returns {Promise<Boolean>} 是否导出成功\n */\nexport async function exportToPPTX(markdown, filename = 'presentation.pptx', theme = 'default') {\n  try {\n    // 动态导入pptxgenjs库\n    const pptxgenModule = await import('pptxgenjs');\n    const pptxgen = pptxgenModule.default || pptxgenModule;\n\n    // 确保Markdown包含正确的元数据\n    const processedMarkdown = ensureMarpMetadata(markdown, theme);\n\n    // 解析Markdown内容，提取幻灯片\n    const slides = processedMarkdown.split('---').filter(slide => slide.trim());\n\n    // 创建新的PPTX文档\n    const pptx = new pptxgen();\n\n    // 设置幻灯片大小为16:9\n    pptx.defineLayout({ name: 'LAYOUT_16x9', width: 10, height: 5.625 });\n    pptx.layout = 'LAYOUT_16x9';\n\n    // 设置主题颜色\n    const themeColors = {\n      default: {\n        background: 'FFFFFF',\n        title: '333333',\n        text: '666666',\n        accent: '4361ee'\n      },\n      gaia: {\n        background: '101010',\n        title: 'FFFFFF',\n        text: 'CCCCCC',\n        accent: '3B82F6'\n      },\n      uncover: {\n        background: 'FFFFFF',\n        title: '137CBD',\n        text: '333333',\n        accent: '137CBD'\n      },\n      bespoke: {\n        background: 'FAFAFA',\n        title: '2563EB',\n        text: '333333',\n        accent: '3B82F6'\n      },\n      elegant: {\n        background: 'F8F9FA',\n        title: '1E40AF',\n        text: '212529',\n        accent: '4361EE'\n      },\n      corporate: {\n        background: 'FFFFFF',\n        title: '0A66C2',\n        text: '333333',\n        accent: '0A66C2'\n      },\n      creative: {\n        background: 'FEFEFE',\n        title: 'FF6B6B',\n        text: '333333',\n        accent: '6B6BFF'\n      },\n      minimal: {\n        background: 'FFFFFF',\n        title: '000000',\n        text: '222222',\n        accent: '999999'\n      }\n    };\n\n    // 获取当前主题的颜色\n    const colors = themeColors[theme] || themeColors.default;\n\n    // 处理每张幻灯片\n    for (let i = 0; i < slides.length; i++) {\n      const slideContent = slides[i];\n\n      // 创建新幻灯片\n      const slide = pptx.addSlide();\n\n      // 设置背景颜色\n      slide.background = { color: colors.background };\n\n      // 提取标题（如果有）\n      const titleMatch = slideContent.match(/^#\\s+(.+)$/m);\n      const title = titleMatch ? titleMatch[1] : '';\n\n      // 提取二级标题（如果有）\n      const subtitleMatch = slideContent.match(/^##\\s+(.+)$/m);\n      const subtitle = subtitleMatch ? subtitleMatch[1] : '';\n\n      // 提取内容（排除标题和二级标题）\n      let content = slideContent;\n      if (titleMatch) {\n        content = content.replace(titleMatch[0], '').trim();\n      }\n      if (subtitleMatch) {\n        content = content.replace(subtitleMatch[0], '').trim();\n      }\n\n      // 检查是否为封面幻灯片\n      const isCoverSlide = i === 0 && title && !content.trim();\n\n      // 添加标题\n      if (title) {\n        slide.addText(title, {\n          x: 0.5,\n          y: isCoverSlide ? 2.5 : 0.5,\n          w: '90%',\n          fontSize: isCoverSlide ? 36 : 24,\n          bold: true,\n          color: colors.title,\n          align: isCoverSlide ? 'center' : 'left'\n        });\n      }\n\n      // 添加二级标题\n      if (subtitle) {\n        slide.addText(subtitle, {\n          x: 0.5,\n          y: title ? 1.2 : 0.5,\n          w: '90%',\n          fontSize: 20,\n          bold: false,\n          color: colors.title,\n          align: isCoverSlide ? 'center' : 'left'\n        });\n      }\n\n      // 解析Markdown列表\n      const lists = content.match(/(?:^\\s*[-*+]\\s+.+$(?:\\n|$))+/gm) || [];\n      const orderedLists = content.match(/(?:^\\s*\\d+\\.\\s+.+$(?:\\n|$))+/gm) || [];\n\n      // 从内容中移除已处理的列表\n      lists.forEach(list => {\n        content = content.replace(list, '');\n      });\n      orderedLists.forEach(list => {\n        content = content.replace(list, '');\n      });\n\n      // 解析表格\n      const tables = content.match(/\\|.+\\|[\\s\\S]*?\\|.+\\|/g) || [];\n      tables.forEach(table => {\n        content = content.replace(table, '');\n      });\n\n      // 解析图片\n      const images = content.match(/!\\[.*?\\]\\((.+?)\\)/g) || [];\n      images.forEach(img => {\n        content = content.replace(img, '');\n      });\n\n      // 处理剩余的文本内容\n      const remainingText = content.trim();\n      if (remainingText) {\n        // 将Markdown格式转换为纯文本\n        const formattedText = remainingText\n          .replace(/\\*\\*(.+?)\\*\\*/g, '$1') // 移除粗体\n          .replace(/\\*(.+?)\\*/g, '$1')     // 移除斜体\n          .replace(/`(.+?)`/g, '$1')       // 移除代码\n          .replace(/\\[(.+?)\\]\\(.+?\\)/g, '$1'); // 保留链接文本\n\n        slide.addText(formattedText, {\n          x: 0.5,\n          y: title ? (subtitle ? 2.0 : 1.5) : 0.5,\n          w: '90%',\n          h: 3,\n          fontSize: 14,\n          color: colors.text,\n          bullet: false\n        });\n      }\n\n      // 添加无序列表\n      lists.forEach((list, index) => {\n        const listItems = list.split('\\n')\n          .filter(item => item.trim())\n          .map(item => item.replace(/^\\s*[-*+]\\s+/, '').trim());\n\n        if (listItems.length > 0) {\n          slide.addText(listItems, {\n            x: 0.5,\n            y: title ? (subtitle ? 2.0 : 1.5) : 0.5,\n            w: '90%',\n            h: 3,\n            fontSize: 14,\n            color: colors.text,\n            bullet: true\n          });\n        }\n      });\n\n      // 添加有序列表\n      orderedLists.forEach((list, index) => {\n        const listItems = list.split('\\n')\n          .filter(item => item.trim())\n          .map(item => item.replace(/^\\s*\\d+\\.\\s+/, '').trim());\n\n        if (listItems.length > 0) {\n          slide.addText(listItems, {\n            x: 0.5,\n            y: title ? (subtitle ? 2.0 : 1.5) : 0.5,\n            w: '90%',\n            h: 3,\n            fontSize: 14,\n            color: colors.text,\n            bullet: { type: 'number' }\n          });\n        }\n      });\n\n      // 添加表格\n      tables.forEach((tableText, index) => {\n        const tableRows = tableText.split('\\n')\n          .filter(row => row.trim() && row.includes('|'))\n          .map(row => row.split('|').filter(cell => cell !== '').map(cell => cell.trim()));\n\n        if (tableRows.length > 1) { // 至少有标题行和分隔行\n          // 移除分隔行（通常是第二行，包含 ----- 的行）\n          const headerRow = tableRows[0];\n          const dataRows = tableRows.slice(2);\n\n          // 创建表格\n          const tableData = [];\n          const tableColWidth = [];\n\n          // 设置列宽\n          for (let i = 0; i < headerRow.length; i++) {\n            tableColWidth.push(8 / headerRow.length);\n          }\n\n          // 添加表头\n          tableData.push(headerRow);\n\n          // 添加数据行\n          dataRows.forEach(row => {\n            tableData.push(row);\n          });\n\n          // 添加表格到幻灯片\n          slide.addTable(tableData, {\n            x: 0.5,\n            y: title ? (subtitle ? 2.5 : 2.0) : 1.0,\n            w: 9,\n            color: colors.text,\n            fontSize: 12,\n            border: { pt: 0.5, color: colors.accent }\n          });\n        }\n      });\n\n      // 添加图片\n      images.forEach((imgText, index) => {\n        const imgUrlMatch = imgText.match(/!\\[.*?\\]\\((.+?)\\)/);\n        if (imgUrlMatch && imgUrlMatch[1]) {\n          const imgUrl = imgUrlMatch[1];\n\n          // 添加图片到幻灯片\n          slide.addImage({\n            path: imgUrl,\n            x: 0.5,\n            y: title ? (subtitle ? 2.5 : 2.0) : 1.0,\n            w: 9,\n            h: 5\n          });\n        }\n      });\n\n      // 添加页码（除了封面）\n      if (!isCoverSlide) {\n        slide.addText(`${i + 1} / ${slides.length}`, {\n          x: 9,\n          y: 5.4,\n          w: 0.5,\n          fontSize: 10,\n          color: colors.text,\n          align: 'right'\n        });\n      }\n    }\n\n    // 生成并下载PPTX\n    pptx.writeFile({ fileName: filename });\n\n    console.log(`成功导出PPTX，共${slides.length}张幻灯片`);\n    return true;\n  } catch (error) {\n    console.error('PPTX导出失败:', error);\n    throw error;\n  }\n}\n\n/**\n * 预览演示文稿\n * @param {String} markdown Markdown内容\n * @param {String} theme 主题名称\n * @param {Boolean} inNewWindow 是否在新窗口中预览\n * @returns {Promise<Object>} 预览结果，包含HTML和幻灯片数量\n */\nexport async function previewPresentation(markdown, theme = 'default', inNewWindow = true) {\n  try {\n    // 渲染Markdown为HTML\n    const renderResult = await renderMarkdownToHTML(markdown, theme);\n    const { html: fullHTML, slideCount } = renderResult;\n\n    if (inNewWindow) {\n      // 创建一个新窗口来显示预览\n      const previewWindow = window.open('', '_blank');\n      if (!previewWindow) {\n        throw new Error('无法打开预览窗口，请检查浏览器是否阻止了弹出窗口');\n      }\n      previewWindow.document.write(fullHTML);\n      previewWindow.document.close();\n    }\n\n    return {\n      html: fullHTML,\n      slideCount,\n      success: true\n    };\n  } catch (error) {\n    console.error('预览失败:', error);\n    throw error;\n  }\n}\n\n/**\n * 获取可用的主题列表\n * @returns {Array} 主题列表\n */\nexport function getAvailableThemes() {\n  return AVAILABLE_THEMES;\n}\n\n/**\n * 获取主题预览数据\n * @returns {Object} 主题预览数据\n */\nexport function getThemePreviews() {\n  const sampleMarkdown = `---\nmarp: true\ntheme: $THEME$\npaginate: true\n---\n\n# 这是一个示例演示文稿\n\n---\n\n## 主要内容\n\n- 第一点\n- 第二点\n- 第三点\n\n---\n\n## 表格示例\n\n| 项目 | 描述 |\n|------|------|\n| 项目1 | 描述1 |\n| 项目2 | 描述2 |\n\n---\n\n# 谢谢观看！`;\n\n  const previews = {};\n\n  AVAILABLE_THEMES.forEach(theme => {\n    previews[theme.id] = sampleMarkdown.replace('$THEME$', theme.id);\n  });\n\n  return previews;\n}\n","<template>\n  <div class=\"preview-overlay\" @click.self=\"$emit('close')\">\n    <div class=\"preview-container\">\n      <div class=\"preview-header\">\n        <div class=\"preview-title\">\n          <h2>演示文稿预览</h2>\n          <span class=\"slide-count\" v-if=\"slideCount > 0\">{{ slideCount }}张幻灯片</span>\n        </div>\n        <div class=\"preview-controls\">\n          <div class=\"theme-selector\">\n            <label for=\"theme-select\">主题：</label>\n            <select id=\"theme-select\" v-model=\"selectedTheme\" @change=\"changeTheme\" class=\"theme-select\">\n              <option v-for=\"theme in availableThemes\" :key=\"theme.id\" :value=\"theme.id\">\n                {{ theme.name }}\n              </option>\n            </select>\n          </div>\n          <div class=\"export-buttons\">\n            <button class=\"btn btn-primary\" @click=\"exportPDF\" title=\"导出为PDF\">\n              <i class=\"fas fa-file-pdf\"></i> PDF\n            </button>\n            <button class=\"btn btn-success\" @click=\"exportPPTX\" title=\"导出为PPTX\">\n              <i class=\"fas fa-file-powerpoint\"></i> PPTX\n            </button>\n          </div>\n          <button class=\"close-btn\" @click=\"$emit('close')\">×</button>\n        </div>\n      </div>\n      <div class=\"preview-content\">\n        <transition name=\"fade\">\n          <div class=\"loading-indicator\" v-if=\"isLoading\">\n            <div class=\"spinner\"></div>\n            <p>正在渲染...</p>\n          </div>\n          <div v-else class=\"marp-preview\" v-html=\"renderedHTML\"></div>\n        </transition>\n      </div>\n      <div class=\"preview-footer\">\n        <div class=\"navigation-controls\">\n          <button class=\"nav-btn prev-btn\" @click=\"prevSlide\" :disabled=\"currentSlide <= 0\">\n            <i class=\"fas fa-chevron-left\"></i> 上一页\n          </button>\n          <span class=\"slide-indicator\">{{ currentSlide + 1 }} / {{ slideCount }}</span>\n          <button class=\"nav-btn next-btn\" @click=\"nextSlide\" :disabled=\"currentSlide >= slideCount - 1\">\n            下一页 <i class=\"fas fa-chevron-right\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, watch, onMounted, onBeforeUnmount, computed } from 'vue';\nimport { getAvailableThemes, exportToPDF, exportToPPTX } from '../services/exportService';\n\nexport default {\n  props: {\n    markdown: {\n      type: String,\n      required: true\n    },\n    initialTheme: {\n      type: String,\n      default: 'default'\n    }\n  },\n  emits: ['close', 'theme-change', 'export'],\n  setup(props, { emit }) {\n    const renderedHTML = ref('');\n    const isLoading = ref(true);\n    const slideCount = ref(0);\n    const currentSlide = ref(0);\n    const selectedTheme = ref(props.initialTheme);\n    const availableThemes = ref(getAvailableThemes());\n    const previewContainer = ref(null);\n\n    // 获取当前主题名称\n    const currentThemeName = computed(() => {\n      const theme = availableThemes.value.find(t => t.id === selectedTheme.value);\n      return theme ? theme.name : '默认主题';\n    });\n\n    // 渲染Markdown为HTML\n    const renderMarkdown = async () => {\n      try {\n        isLoading.value = true;\n\n        // 确保Markdown包含Marp前置元数据\n        let markdownContent = props.markdown;\n\n        // 检查是否已有前置元数据\n        if (markdownContent.startsWith('---\\n')) {\n          // 已有元数据，检查是否包含theme设置\n          if (!markdownContent.includes('theme:')) {\n            // 在元数据中添加theme\n            markdownContent = markdownContent.replace('---\\n', `---\\ntheme: ${selectedTheme.value}\\n`);\n          } else {\n            // 替换现有theme\n            markdownContent = markdownContent.replace(/theme:.*\\n/, `theme: ${selectedTheme.value}\\n`);\n          }\n        } else if (!markdownContent.startsWith('---\\nmarp: true')) {\n          // 没有元数据，添加完整元数据\n          markdownContent = `---\\nmarp: true\\ntheme: ${selectedTheme.value}\\npaginate: true\\n---\\n\\n${markdownContent}`;\n        }\n\n        try {\n          // 动态导入Marp库\n          const { Marp } = await import('@marp-team/marp-core');\n\n          // 创建Marp实例\n          const marp = new Marp({\n            inlineSVG: true,\n            html: true,\n            math: true\n          });\n\n          // 渲染Markdown\n          const { html, css } = marp.render(markdownContent);\n\n          // 创建完整HTML\n          const fullHTML = `\n            <style>${css}</style>\n            ${html}\n          `;\n\n          // 设置HTML内容\n          renderedHTML.value = fullHTML;\n\n          // 计算幻灯片数量\n          const slideMatches = html.match(/<section/g);\n          slideCount.value = slideMatches ? slideMatches.length : 0;\n\n          // 如果没有幻灯片，可能是渲染失败\n          if (slideCount.value === 0) {\n            console.warn('未检测到幻灯片，可能渲染失败');\n            // 使用备用方法计算幻灯片数量\n            const slides = markdownContent.split(/\\n---\\n/);\n            slideCount.value = slides.length;\n          }\n        } catch (error) {\n          console.error('Marp渲染错误:', error);\n\n          // 使用备用渲染方法\n          const slides = markdownContent.split(/\\n---\\n/);\n\n          // 创建HTML\n          let html = '<div class=\"marp-slides\">';\n\n          // 处理每张幻灯片\n          slides.forEach((slide, index) => {\n            // 移除前置元数据（如果是第一张幻灯片）\n            if (index === 0 && slide.startsWith('---')) {\n              const metadataEnd = slide.indexOf('---', 3) + 3;\n              if (metadataEnd > 2) {\n                slide = slide.substring(metadataEnd).trim();\n              }\n            }\n\n            // 简单的Markdown到HTML转换\n            let slideContent = slide\n              // 标题转换\n              .replace(/^# (.*?)$/gm, '<h1>$1</h1>')\n              .replace(/^## (.*?)$/gm, '<h2>$1</h2>')\n              .replace(/^### (.*?)$/gm, '<h3>$1</h3>')\n              // 列表转换\n              .replace(/^- (.*?)$/gm, '<li>$1</li>')\n              .replace(/<\\/li>\\n<li>/g, '</li><li>')\n              .replace(/(<li>.*?<\\/li>)/gs, '<ul>$1</ul>')\n              // 段落转换\n              .replace(/^([^<].*?)$/gm, '<p>$1</p>')\n              .replace(/<p><\\/p>/g, '')\n              // 图片转换\n              .replace(/!\\[(.*?)\\]\\((.*?)\\)/g, '<img alt=\"$1\" src=\"$2\" style=\"max-width: 100%;\">')\n              // 链接转换\n              .replace(/\\[(.*?)\\]\\((.*?)\\)/g, '<a href=\"$2\">$1</a>');\n\n            // 添加幻灯片\n            html += `<section class=\"slide\" id=\"slide-${index+1}\">${slideContent}</section>`;\n          });\n\n          html += '</div>';\n\n          // 设置HTML内容\n          renderedHTML.value = html;\n\n          // 设置幻灯片数量\n          slideCount.value = slides.length;\n        }\n      } catch (error) {\n        console.error('Markdown渲染失败:', error);\n        renderedHTML.value = `<div class=\"error\">渲染失败: ${error.message}</div>`;\n        slideCount.value = 0;\n      } finally {\n        isLoading.value = false;\n      }\n    };\n\n    // 切换主题\n    const changeTheme = () => {\n      emit('theme-change', selectedTheme.value);\n      renderMarkdown();\n    };\n\n    // 导航到上一张幻灯片\n    const prevSlide = () => {\n      if (currentSlide.value > 0) {\n        currentSlide.value--;\n        navigateToSlide(currentSlide.value);\n      }\n    };\n\n    // 导航到下一张幻灯片\n    const nextSlide = () => {\n      if (currentSlide.value < slideCount.value - 1) {\n        currentSlide.value++;\n        navigateToSlide(currentSlide.value);\n      }\n    };\n\n    // 导航到指定幻灯片\n    const navigateToSlide = (index) => {\n      const sections = document.querySelectorAll('.marp-preview section');\n      if (sections.length > 0 && sections[index]) {\n        // 滚动到指定幻灯片\n        sections[index].scrollIntoView({ behavior: 'smooth' });\n      }\n    };\n\n    // 导出为PDF\n    const exportPDF = async () => {\n      try {\n        emit('export', { type: 'pdf', theme: selectedTheme.value });\n\n        // 创建导出中提示\n        const exportingMessage = document.createElement('div');\n        exportingMessage.style.position = 'fixed';\n        exportingMessage.style.top = '50%';\n        exportingMessage.style.left = '50%';\n        exportingMessage.style.transform = 'translate(-50%, -50%)';\n        exportingMessage.style.padding = '20px';\n        exportingMessage.style.backgroundColor = 'rgba(0, 0, 0, 0.8)';\n        exportingMessage.style.color = 'white';\n        exportingMessage.style.borderRadius = '8px';\n        exportingMessage.style.zIndex = '10000';\n        exportingMessage.style.fontWeight = 'bold';\n        exportingMessage.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.2)';\n        exportingMessage.style.minWidth = '250px';\n        exportingMessage.style.textAlign = 'center';\n        exportingMessage.textContent = '正在准备打印预览...';\n        document.body.appendChild(exportingMessage);\n\n        try {\n          // 获取当前预览的HTML内容\n          const previewElement = document.querySelector('.marp-preview');\n          if (!previewElement) {\n            throw new Error('无法找到预览内容');\n          }\n\n          // 创建打印窗口\n          const printWindow = window.open('', '_blank');\n          if (!printWindow) {\n            throw new Error('无法打开打印窗口，请检查浏览器是否阻止了弹出窗口');\n          }\n\n          // 提取样式\n          const styleContent = previewElement.querySelector('style')?.innerHTML || '';\n\n          // 使用字符串变量拼接HTML，避免Vue编译器解析HTML标签\n          const doctype = '<!DOCTYPE html>';\n          const htmlOpen = '<html>';\n          const htmlClose = '</html>';\n          const headOpen = '<head>';\n          const headClose = '</head>';\n          const bodyOpen = '<body>';\n          const bodyClose = '</body>';\n          const title = '<title>jsPPT演示文稿</title>';\n          const styleOpen = '<style>';\n          const styleClose = '</style>';\n          const divOpen = '<div class=\"print-container\">';\n          const divClose = '</div>';\n\n          // 创建样式内容\n          const cssContent = `\n            body { margin: 0; padding: 0; }\n            .print-container { width: 100%; }\n            section {\n              page-break-after: always;\n              height: 100vh;\n              display: flex;\n              flex-direction: column;\n              justify-content: center;\n              padding: 40px;\n              box-sizing: border-box;\n            }\n            section:last-child { page-break-after: auto; }\n            @media print {\n              body { background: white; }\n              section {\n                height: 100%;\n                page-break-inside: avoid;\n              }\n            }\n            ${styleContent}\n          `;\n\n          // 创建脚本内容\n          const scriptOpen = '<scr' + 'ipt>';\n          const scriptClose = '</scr' + 'ipt>';\n          const scriptBody = `\n            // 自动打印\n            window.onload = function() {\n              setTimeout(function() {\n                window.print();\n              }, 500);\n            };\n          `;\n          const scriptContent = scriptOpen + scriptBody + scriptClose;\n\n          // 组合HTML内容\n          const htmlContent =\n            doctype +\n            htmlOpen +\n            headOpen +\n            title +\n            styleOpen +\n            cssContent +\n            styleClose +\n            headClose +\n            bodyOpen +\n            divOpen +\n            previewElement.innerHTML +\n            divClose +\n            scriptContent +\n            bodyClose +\n            htmlClose;\n\n          // 写入HTML内容\n          printWindow.document.write(htmlContent);\n          printWindow.document.close();\n\n          // 导出成功\n          exportingMessage.textContent = '已打开打印预览，请使用浏览器的打印功能保存为PDF';\n          exportingMessage.style.backgroundColor = 'rgba(16, 185, 129, 0.8)';\n          setTimeout(() => {\n            document.body.removeChild(exportingMessage);\n          }, 3000);\n        } catch (error) {\n          // 导出失败\n          console.error('PDF导出失败:', error);\n          exportingMessage.textContent = `PDF导出失败: ${error.message}`;\n          exportingMessage.style.backgroundColor = 'rgba(220, 38, 38, 0.8)';\n          setTimeout(() => {\n            document.body.removeChild(exportingMessage);\n          }, 3000);\n        }\n      } catch (error) {\n        console.error('PDF导出过程中发生错误:', error);\n        alert(`PDF导出失败: ${error.message}`);\n      }\n    };\n\n    // 导出为PPTX\n    const exportPPTX = async () => {\n      try {\n        emit('export', { type: 'pptx', theme: selectedTheme.value });\n\n        // 显示导出中提示\n        const exportingMessage = document.createElement('div');\n        exportingMessage.style.position = 'fixed';\n        exportingMessage.style.top = '50%';\n        exportingMessage.style.left = '50%';\n        exportingMessage.style.transform = 'translate(-50%, -50%)';\n        exportingMessage.style.padding = '20px';\n        exportingMessage.style.backgroundColor = 'rgba(0, 0, 0, 0.8)';\n        exportingMessage.style.color = 'white';\n        exportingMessage.style.borderRadius = '8px';\n        exportingMessage.style.zIndex = '10000';\n        exportingMessage.style.fontWeight = 'bold';\n        exportingMessage.textContent = '正在导出PPTX，请稍候...';\n        document.body.appendChild(exportingMessage);\n\n        try {\n          await exportToPPTX(props.markdown, 'presentation.pptx', selectedTheme.value);\n          // 导出成功\n          exportingMessage.textContent = 'PPTX导出成功！';\n          exportingMessage.style.backgroundColor = 'rgba(16, 185, 129, 0.8)';\n          setTimeout(() => {\n            document.body.removeChild(exportingMessage);\n          }, 2000);\n        } catch (error) {\n          // 导出失败\n          console.error('PPTX导出失败:', error);\n          exportingMessage.textContent = `PPTX导出失败: ${error.message}`;\n          exportingMessage.style.backgroundColor = 'rgba(220, 38, 38, 0.8)';\n          setTimeout(() => {\n            document.body.removeChild(exportingMessage);\n          }, 3000);\n        }\n      } catch (error) {\n        console.error('PPTX导出过程中发生错误:', error);\n        alert(`PPTX导出失败: ${error.message}`);\n      }\n    };\n\n    // 键盘导航\n    const handleKeyDown = (e) => {\n      if (e.key === 'ArrowRight' || e.key === 'PageDown' || e.key === ' ') {\n        nextSlide();\n      } else if (e.key === 'ArrowLeft' || e.key === 'PageUp') {\n        prevSlide();\n      } else if (e.key === 'Home') {\n        currentSlide.value = 0;\n        navigateToSlide(0);\n      } else if (e.key === 'End') {\n        currentSlide.value = slideCount.value - 1;\n        navigateToSlide(slideCount.value - 1);\n      }\n    };\n\n    // 监听markdown变化\n    watch(() => props.markdown, () => {\n      renderMarkdown();\n    });\n\n    // 监听initialTheme变化\n    watch(() => props.initialTheme, (newTheme) => {\n      selectedTheme.value = newTheme;\n      renderMarkdown();\n    });\n\n\n\n    // 组件挂载时渲染\n    onMounted(() => {\n      renderMarkdown();\n\n      // 添加键盘事件监听\n      window.addEventListener('keydown', handleKeyDown);\n    });\n\n    // 组件卸载时清理\n    onBeforeUnmount(() => {\n      window.removeEventListener('keydown', handleKeyDown);\n    });\n\n    return {\n      renderedHTML,\n      isLoading,\n      slideCount,\n      currentSlide,\n      selectedTheme,\n      availableThemes,\n      currentThemeName,\n      changeTheme,\n      prevSlide,\n      nextSlide,\n      exportPDF,\n      exportPPTX\n    };\n  }\n}\n</script>\n\n<style scoped>\n.preview-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.85);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  padding: 20px;\n  backdrop-filter: blur(5px);\n  transition: all 0.3s ease;\n}\n\n.preview-container {\n  background-color: white;\n  border-radius: 12px;\n  width: 95%;\n  max-width: 1400px;\n  height: 95vh;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);\n  overflow: hidden;\n  animation: slide-up 0.4s ease;\n}\n\n@keyframes slide-up {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.preview-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px 20px;\n  border-bottom: 1px solid #eaeaea;\n  background-color: #f8f9fa;\n}\n\n.preview-title {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.preview-title h2 {\n  margin: 0;\n  font-size: 1.5rem;\n  color: #333;\n}\n\n.slide-count {\n  font-size: 0.9rem;\n  color: #666;\n  background-color: #e9ecef;\n  padding: 4px 8px;\n  border-radius: 4px;\n}\n\n.preview-controls {\n  display: flex;\n  align-items: center;\n  gap: 16px;\n}\n\n.theme-selector {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.theme-selector label {\n  font-size: 0.9rem;\n  color: #555;\n}\n\n.theme-selector select {\n  padding: 6px 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  background-color: white;\n  font-size: 0.9rem;\n}\n\n.export-buttons {\n  display: flex;\n  gap: 8px;\n}\n\n.btn {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 6px;\n  cursor: pointer;\n  font-weight: 500;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.btn-sm {\n  font-size: 0.85rem;\n  padding: 6px 12px;\n}\n\n.btn:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.btn-primary {\n  background-color: #4361ee;\n  color: white;\n}\n\n.btn-primary:hover {\n  background-color: #3a56d4;\n  box-shadow: 0 4px 8px rgba(67, 97, 238, 0.2);\n}\n\n.btn-success {\n  background-color: #10b981;\n  color: white;\n}\n\n.btn-success:hover {\n  background-color: #0ea271;\n  box-shadow: 0 4px 8px rgba(16, 185, 129, 0.2);\n}\n\n.close-btn {\n  background: none;\n  border: none;\n  font-size: 1.8rem;\n  cursor: pointer;\n  color: #666;\n  line-height: 1;\n  padding: 0;\n  margin-left: 10px;\n}\n\n.close-btn:hover {\n  color: #333;\n}\n\n.preview-content {\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px;\n  background-color: #f0f0f0;\n  position: relative;\n}\n\n.loading-indicator {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n}\n\n.spinner {\n  width: 40px;\n  height: 40px;\n  border: 4px solid rgba(0, 0, 0, 0.1);\n  border-radius: 50%;\n  border-top-color: #4361ee;\n  animation: spin 1s ease-in-out infinite;\n}\n\n@keyframes spin {\n  to { transform: rotate(360deg); }\n}\n\n.loading-indicator p {\n  color: #666;\n  font-size: 1rem;\n  margin: 0;\n}\n\n.marp-preview {\n  height: 100%;\n  overflow-y: auto;\n  display: block;\n  background-color: #f5f5f5;\n  padding: 20px 0;\n}\n\n/* 增强Marp渲染的样式 */\n:deep(.marp-preview section) {\n  background-color: white;\n  margin: 0 auto 30px;\n  padding: 40px;\n  border-radius: 12px;\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);\n  width: 100%;\n  max-width: 1000px;\n  aspect-ratio: 16 / 9;\n  scroll-snap-align: start;\n  position: relative;\n  overflow: hidden;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n}\n\n:deep(.marp-preview section:hover) {\n  transform: translateY(-5px);\n  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);\n}\n\n/* 幻灯片内容样式增强 */\n:deep(.marp-preview section h1) {\n  font-size: 2.8rem;\n  margin-bottom: 1.5rem;\n  color: #2c3e50;\n  font-weight: 700;\n  line-height: 1.2;\n  letter-spacing: -0.5px;\n}\n\n:deep(.marp-preview section h2) {\n  font-size: 2.2rem;\n  margin-bottom: 1.2rem;\n  color: #3498db;\n  font-weight: 600;\n  line-height: 1.3;\n}\n\n:deep(.marp-preview section h3) {\n  font-size: 1.8rem;\n  margin-bottom: 1rem;\n  color: #2980b9;\n  font-weight: 600;\n}\n\n:deep(.marp-preview section p) {\n  font-size: 1.2rem;\n  line-height: 1.6;\n  margin-bottom: 1rem;\n  color: #34495e;\n}\n\n:deep(.marp-preview section ul),\n:deep(.marp-preview section ol) {\n  margin-left: 2rem;\n  margin-bottom: 1.5rem;\n}\n\n:deep(.marp-preview section li) {\n  font-size: 1.2rem;\n  line-height: 1.6;\n  margin-bottom: 0.8rem;\n  color: #34495e;\n}\n\n:deep(.marp-preview section img) {\n  max-width: 100%;\n  height: auto;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n:deep(.marp-preview section a) {\n  color: #3498db;\n  text-decoration: none;\n  border-bottom: 1px dotted #3498db;\n  transition: color 0.2s ease, border-bottom 0.2s ease;\n}\n\n:deep(.marp-preview section a:hover) {\n  color: #2980b9;\n  border-bottom: 1px solid #2980b9;\n}\n\n:deep(.marp-preview section blockquote) {\n  border-left: 4px solid #3498db;\n  padding: 0.5rem 0 0.5rem 1.5rem;\n  margin: 1.5rem 0;\n  color: #7f8c8d;\n  font-style: italic;\n  background-color: rgba(52, 152, 219, 0.05);\n  border-radius: 0 8px 8px 0;\n}\n\n:deep(.marp-preview section code) {\n  font-family: 'Fira Code', monospace;\n  background-color: #f8f9fa;\n  padding: 0.2rem 0.4rem;\n  border-radius: 4px;\n  font-size: 0.9em;\n  color: #e74c3c;\n}\n\n:deep(.marp-preview section pre) {\n  background-color: #2c3e50;\n  padding: 1rem;\n  border-radius: 8px;\n  overflow-x: auto;\n  margin: 1.5rem 0;\n}\n\n:deep(.marp-preview section pre code) {\n  background-color: transparent;\n  color: #ecf0f1;\n  padding: 0;\n  font-size: 1rem;\n  line-height: 1.5;\n}\n\n:deep(.marp-preview section table) {\n  width: 100%;\n  border-collapse: collapse;\n  margin: 1.5rem 0;\n  overflow: hidden;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n}\n\n:deep(.marp-preview section th) {\n  background-color: #3498db;\n  color: white;\n  font-weight: 600;\n  padding: 0.8rem;\n  text-align: left;\n}\n\n:deep(.marp-preview section td) {\n  padding: 0.8rem;\n  border-bottom: 1px solid #ecf0f1;\n}\n\n:deep(.marp-preview section tr:nth-child(even)) {\n  background-color: #f8f9fa;\n}\n\n:deep(.marp-preview section tr:hover) {\n  background-color: #ecf0f1;\n}\n\n/* 自定义背景和布局支持 */\n:deep([data-marp-background]) {\n  background-size: cover !important;\n  background-position: center !important;\n}\n\n:deep([data-marp-background-color]) {\n  background-color: attr(data-marp-background-color) !important;\n}\n\n/* 支持Marp的分栏布局 */\n:deep(.marp-preview section[data-marp-split=\"right\"]) {\n  display: grid;\n  grid-template-columns: 50% 50%;\n  grid-template-areas: \"left right\";\n  gap: 20px;\n}\n\n:deep(.marp-preview section[data-marp-split=\"left\"]) {\n  display: grid;\n  grid-template-columns: 50% 50%;\n  grid-template-areas: \"right left\";\n  gap: 20px;\n}\n\n/* 备用渲染的样式 */\n.marp-slides {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n}\n\n.slide {\n  background-color: white;\n  margin: 0 auto 30px;\n  padding: 40px;\n  border-radius: 12px;\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);\n  width: 100%;\n  max-width: 1000px;\n  aspect-ratio: 16 / 9;\n  scroll-snap-align: start;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  overflow: hidden;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n}\n\n.slide:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);\n}\n\n.error {\n  color: #e63946;\n  padding: 20px;\n  text-align: center;\n  font-weight: bold;\n  background-color: #f8d7da;\n  border-radius: 8px;\n  margin: 20px;\n}\n\n.preview-footer {\n  padding: 12px 20px;\n  border-top: 1px solid #eaeaea;\n  background-color: #f8f9fa;\n}\n\n.navigation-controls {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n}\n\n.nav-btn {\n  padding: 8px 16px;\n  border: 1px solid #ddd;\n  border-radius: 6px;\n  background-color: white;\n  cursor: pointer;\n  font-size: 0.95rem;\n  font-weight: 500;\n  color: #495057;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n}\n\n.prev-btn {\n  padding-left: 12px;\n}\n\n.prev-btn i {\n  margin-right: 8px;\n}\n\n.next-btn {\n  padding-right: 12px;\n}\n\n.next-btn i {\n  margin-left: 8px;\n}\n\n.nav-btn:hover:not(:disabled) {\n  background-color: #f1f3f5;\n  border-color: #ced4da;\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);\n}\n\n.nav-btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.slide-indicator {\n  font-size: 1rem;\n  color: #495057;\n  font-weight: 500;\n  min-width: 80px;\n  text-align: center;\n  background-color: #e9ecef;\n  padding: 8px 16px;\n  border-radius: 6px;\n}\n\n/* 为Marp渲染的内容添加样式 */\n:deep(.marp-preview) {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n}\n\n:deep(section) {\n  background-color: white;\n  margin: 0 auto 30px;\n  padding: 40px;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  max-width: 1000px;\n  aspect-ratio: 16 / 9;\n  scroll-snap-align: start;\n}\n\n:deep(h1) {\n  font-size: 2.5rem;\n  margin-bottom: 1rem;\n}\n\n:deep(h2) {\n  font-size: 2rem;\n  margin-bottom: 0.8rem;\n}\n\n:deep(h3) {\n  font-size: 1.5rem;\n  margin-bottom: 0.6rem;\n}\n\n:deep(ul), :deep(ol) {\n  margin-left: 2rem;\n}\n\n:deep(li) {\n  margin-bottom: 0.5rem;\n}\n\n:deep(img) {\n  max-width: 100%;\n  height: auto;\n  border-radius: 4px;\n}\n\n:deep(table) {\n  border-collapse: collapse;\n  width: 100%;\n  margin: 1rem 0;\n}\n\n:deep(th), :deep(td) {\n  border: 1px solid #ddd;\n  padding: 8px;\n}\n\n:deep(th) {\n  background-color: #f8f9fa;\n  font-weight: bold;\n}\n\n:deep(blockquote) {\n  border-left: 4px solid #4361ee;\n  padding-left: 1rem;\n  color: #666;\n  font-style: italic;\n}\n\n:deep(code) {\n  background-color: #f8f9fa;\n  padding: 2px 4px;\n  border-radius: 4px;\n  font-family: 'Courier New', Courier, monospace;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .preview-container {\n    width: 100%;\n    height: 100vh;\n    border-radius: 0;\n  }\n\n  .preview-header {\n    flex-direction: column;\n    gap: 10px;\n    align-items: flex-start;\n  }\n\n  .preview-controls {\n    width: 100%;\n    flex-wrap: wrap;\n  }\n\n  .theme-selector {\n    flex: 1;\n    min-width: 150px;\n  }\n\n  .export-buttons {\n    flex: 1;\n    justify-content: flex-end;\n  }\n\n  .preview-content {\n    padding: 10px;\n  }\n\n  :deep(section) {\n    padding: 20px;\n    margin-bottom: 20px;\n  }\n\n  :deep(h1) {\n    font-size: 1.8rem;\n  }\n\n  :deep(h2) {\n    font-size: 1.5rem;\n  }\n\n  :deep(h3) {\n    font-size: 1.2rem;\n  }\n}\n</style>\n","/**\n * 浏览器兼容性检测服务\n * 用于检测WebGPU、WebGL支持和设备性能\n */\nclass CompatibilityService {\n  /**\n   * 检测WebGPU支持\n   * @returns {Promise<Object>} 支持状态和详细信息\n   */\n  async checkWebGPUSupport() {\n    if (!navigator.gpu) {\n      return {\n        supported: false,\n        reason: 'WebGPU API不可用'\n      };\n    }\n\n    try {\n      // 尝试获取适配器\n      const adapter = await navigator.gpu.requestAdapter();\n      if (!adapter) {\n        return {\n          supported: false,\n          reason: '无法获取WebGPU适配器'\n        };\n      }\n\n      // 检查是否可以创建设备\n      const device = await adapter.requestDevice();\n      if (!device) {\n        return {\n          supported: false,\n          reason: '无法创建WebGPU设备'\n        };\n      }\n\n      return {\n        supported: true,\n        adapter: adapter,\n        device: device\n      };\n    } catch (error) {\n      return {\n        supported: false,\n        reason: `WebGPU初始化失败: ${error.message}`\n      };\n    }\n  }\n\n  /**\n   * 检测WebGL支持（作为备选）\n   * @returns {Object} 支持状态和详细信息\n   */\n  checkWebGLSupport() {\n    try {\n      const canvas = document.createElement('canvas');\n      const gl = canvas.getContext('webgl2') || canvas.getContext('webgl');\n\n      if (!gl) {\n        return {\n          supported: false,\n          reason: 'WebGL不可用'\n        };\n      }\n\n      return {\n        supported: true,\n        version: gl instanceof WebGL2RenderingContext ? 2 : 1,\n        context: gl\n      };\n    } catch (error) {\n      return {\n        supported: false,\n        reason: `WebGL检测失败: ${error.message}`\n      };\n    }\n  }\n\n  /**\n   * 检测设备性能\n   * @returns {Object} 设备性能信息\n   */\n  checkDevicePerformance() {\n    const memory = navigator.deviceMemory || 4; // 默认假设4GB内存\n    const cores = navigator.hardwareConcurrency || 4; // 默认假设4核\n\n    // 简单性能评分（仅供参考）\n    const performanceScore = (memory * cores) / 4;\n\n    return {\n      memory,\n      cores,\n      performanceScore,\n      // 性能分级：高、中、低\n      performanceTier: performanceScore >= 8 ? 'high' : (performanceScore >= 4 ? 'medium' : 'low')\n    };\n  }\n\n  /**\n   * 获取浏览器信息\n   * @returns {Object} 浏览器名称和版本\n   */\n  getBrowserInfo() {\n    const userAgent = navigator.userAgent;\n    let browserName = \"未知\";\n    let browserVersion = \"\";\n\n    // 检测Chrome\n    if (userAgent.indexOf(\"Chrome\") > -1 && userAgent.indexOf(\"Edg\") === -1) {\n      browserName = \"Chrome\";\n      browserVersion = userAgent.match(/Chrome\\/([0-9.]+)/)[1];\n    }\n    // 检测Edge\n    else if (userAgent.indexOf(\"Edg\") > -1) {\n      browserName = \"Edge\";\n      browserVersion = userAgent.match(/Edg\\/([0-9.]+)/)[1];\n    }\n    // 检测Firefox\n    else if (userAgent.indexOf(\"Firefox\") > -1) {\n      browserName = \"Firefox\";\n      browserVersion = userAgent.match(/Firefox\\/([0-9.]+)/)[1];\n    }\n    // 检测Safari\n    else if (userAgent.indexOf(\"Safari\") > -1) {\n      browserName = \"Safari\";\n      browserVersion = userAgent.match(/Safari\\/([0-9.]+)/)[1];\n    }\n\n    return {\n      name: browserName,\n      version: browserVersion\n    };\n  }\n\n  /**\n   * 检测是否为移动设备\n   * @returns {Boolean} 是否为移动设备\n   */\n  isMobileDevice() {\n    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n  }\n\n  /**\n   * 获取完整的兼容性报告\n   * @returns {Promise<Object>} 完整的兼容性报告\n   */\n  async getFullCompatibilityReport() {\n    const webgpuSupport = await this.checkWebGPUSupport();\n    const webglSupport = this.checkWebGLSupport();\n    const performance = this.checkDevicePerformance();\n    const browserInfo = this.getBrowserInfo();\n    const isMobile = this.isMobileDevice();\n\n    // 确定最佳执行策略\n    let recommendedStrategy = \"远程API\";\n    let expectedPerformance = \"低\";\n\n    if (webgpuSupport.supported) {\n      recommendedStrategy = \"WebGPU\";\n      expectedPerformance = \"最佳\";\n    } else if (webglSupport.supported) {\n      recommendedStrategy = \"WebGL\";\n      expectedPerformance = \"良好\";\n    } else if (performance.performanceTier !== \"low\") {\n      recommendedStrategy = \"WASM CPU\";\n      expectedPerformance = \"中等\";\n    }\n\n    return {\n      browser: browserInfo,\n      isMobile,\n      webgpu: webgpuSupport,\n      webgl: webglSupport,\n      performance,\n      recommendedStrategy,\n      expectedPerformance\n    };\n  }\n}\n\n// 创建单例实例\nconst compatibilityService = new CompatibilityService();\nexport default compatibilityService;\n","/**\n * 缓存服务\n * 使用IndexedDB管理模型缓存\n */\nclass CacheService {\n  /**\n   * 构造函数\n   */\n  constructor() {\n    this.dbName = 'jsPPT-ModelCache';\n    this.storeName = 'models';\n    this.db = null;\n  }\n\n  /**\n   * 初始化数据库\n   * @returns {Promise<IDBDatabase>} IndexedDB数据库实例\n   */\n  async initDB() {\n    if (this.db) return this.db;\n\n    return new Promise((resolve, reject) => {\n      const request = indexedDB.open(this.dbName, 1);\n\n      request.onupgradeneeded = (event) => {\n        const db = event.target.result;\n        if (!db.objectStoreNames.contains(this.storeName)) {\n          db.createObjectStore(this.storeName);\n        }\n      };\n\n      request.onsuccess = (event) => {\n        this.db = event.target.result;\n        resolve(this.db);\n      };\n\n      request.onerror = (event) => {\n        console.error('IndexedDB初始化失败:', event.target.error);\n        reject(event.target.error);\n      };\n    });\n  }\n\n  /**\n   * 检查模型是否已缓存\n   * @param {String} modelId 模型ID\n   * @returns {Promise<Boolean>} 是否已缓存\n   */\n  async hasModel(modelId) {\n    try {\n      await this.initDB();\n\n      return new Promise((resolve) => {\n        const transaction = this.db.transaction(this.storeName, 'readonly');\n        const store = transaction.objectStore(this.storeName);\n        const request = store.get(modelId);\n\n        request.onsuccess = () => {\n          resolve(!!request.result);\n        };\n\n        request.onerror = () => {\n          console.error('检查模型缓存失败:', request.error);\n          resolve(false);\n        };\n      });\n    } catch (error) {\n      console.error('检查模型缓存失败:', error);\n      return false;\n    }\n  }\n\n  /**\n   * 保存模型到缓存\n   * @param {String} modelId 模型ID\n   * @param {*} modelData 模型数据\n   * @returns {Promise<Boolean>} 是否保存成功\n   */\n  async saveModel(modelId, modelData) {\n    try {\n      await this.initDB();\n\n      return new Promise((resolve, reject) => {\n        const transaction = this.db.transaction(this.storeName, 'readwrite');\n        const store = transaction.objectStore(this.storeName);\n        const request = store.put(modelData, modelId);\n\n        request.onsuccess = () => {\n          resolve(true);\n        };\n\n        request.onerror = (event) => {\n          console.error('保存模型到缓存失败:', event.target.error);\n          reject(event.target.error);\n        };\n      });\n    } catch (error) {\n      console.error('保存模型到缓存失败:', error);\n      return false;\n    }\n  }\n\n  /**\n   * 从缓存获取模型\n   * @param {String} modelId 模型ID\n   * @returns {Promise<*>} 模型数据\n   */\n  async getModel(modelId) {\n    try {\n      await this.initDB();\n\n      return new Promise((resolve, reject) => {\n        const transaction = this.db.transaction(this.storeName, 'readonly');\n        const store = transaction.objectStore(this.storeName);\n        const request = store.get(modelId);\n\n        request.onsuccess = () => {\n          resolve(request.result);\n        };\n\n        request.onerror = (event) => {\n          console.error('从缓存获取模型失败:', event.target.error);\n          reject(event.target.error);\n        };\n      });\n    } catch (error) {\n      console.error('从缓存获取模型失败:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 从缓存删除模型\n   * @param {String} modelId 模型ID\n   * @returns {Promise<Boolean>} 是否删除成功\n   */\n  async deleteModel(modelId) {\n    try {\n      await this.initDB();\n\n      return new Promise((resolve, reject) => {\n        const transaction = this.db.transaction(this.storeName, 'readwrite');\n        const store = transaction.objectStore(this.storeName);\n        const request = store.delete(modelId);\n\n        request.onsuccess = () => {\n          resolve(true);\n        };\n\n        request.onerror = (event) => {\n          console.error('从缓存删除模型失败:', event.target.error);\n          reject(event.target.error);\n        };\n      });\n    } catch (error) {\n      console.error('从缓存删除模型失败:', error);\n      return false;\n    }\n  }\n\n  /**\n   * 清空缓存\n   * @returns {Promise<Boolean>} 是否清空成功\n   */\n  async clearCache() {\n    try {\n      await this.initDB();\n\n      return new Promise((resolve, reject) => {\n        const transaction = this.db.transaction(this.storeName, 'readwrite');\n        const store = transaction.objectStore(this.storeName);\n        const request = store.clear();\n\n        request.onsuccess = () => {\n          resolve(true);\n        };\n\n        request.onerror = (event) => {\n          console.error('清空缓存失败:', event.target.error);\n          reject(event.target.error);\n        };\n      });\n    } catch (error) {\n      console.error('清空缓存失败:', error);\n      return false;\n    }\n  }\n}\n\n// 创建单例实例\nconst cacheService = new CacheService();\nexport default cacheService;\n","/**\n * 渐进式加载服务\n * 负责模型的渐进式加载、分块下载和断点续传\n */\nimport cacheService from './cacheService';\n\nclass ProgressiveLoadService {\n  /**\n   * 构造函数\n   * @param {Object} options 配置选项\n   */\n  constructor(options = {}) {\n    this.options = {\n      modelId: 'qwen3-0.6b',\n      modelUrl: 'https://cdn.jsppt.com/models/qwen3-0.6b-q4.gguf',\n      chunkSize: 10 * 1024 * 1024, // 默认10MB分块\n      ...options\n    };\n\n    this.totalChunks = 0;\n    this.loadedChunks = 0;\n    this.totalSize = 0;\n    this.abortController = null;\n    this.isLoading = false;\n    this.progress = 0;\n    this.error = null;\n    this.metadataKey = `${this.options.modelId}_metadata`;\n  }\n\n  /**\n   * 检测网络速度并动态调整分块大小\n   * @returns {Promise<Number>} 最佳分块大小（字节）\n   */\n  async determineOptimalChunkSize() {\n    try {\n      // 测试网络速度\n      const testUrl = this.options.modelUrl.split('/').slice(0, -1).join('/') + '/network-test';\n      const startTime = Date.now();\n      await fetch(testUrl, { \n        method: 'HEAD',\n        cache: 'no-store',\n        signal: AbortSignal.timeout(3000) // 3秒超时\n      });\n      const endTime = Date.now();\n      const responseTime = endTime - startTime;\n\n      // 基于响应时间调整分块大小\n      if (responseTime < 100) {\n        return 20 * 1024 * 1024; // 20MB (快速网络)\n      } else if (responseTime < 500) {\n        return 10 * 1024 * 1024; // 10MB (中速网络)\n      } else {\n        return 5 * 1024 * 1024;  // 5MB (慢速网络)\n      }\n    } catch (error) {\n      console.log('网络速度测试失败，使用默认分块大小:', error);\n      return this.options.chunkSize; // 使用默认值\n    }\n  }\n\n  /**\n   * 获取模型元数据\n   * @returns {Promise<Object|null>} 模型元数据\n   */\n  async getModelMetadata() {\n    try {\n      return await cacheService.getModel(this.metadataKey);\n    } catch (error) {\n      console.error('获取模型元数据失败:', error);\n      return null;\n    }\n  }\n\n  /**\n   * 保存模型元数据\n   * @param {Object} metadata 模型元数据\n   * @returns {Promise<Boolean>} 是否保存成功\n   */\n  async saveModelMetadata(metadata) {\n    try {\n      return await cacheService.saveModel(this.metadataKey, metadata);\n    } catch (error) {\n      console.error('保存模型元数据失败:', error);\n      return false;\n    }\n  }\n\n  /**\n   * 检查模型是否已完全缓存\n   * @returns {Promise<Boolean>} 是否已完全缓存\n   */\n  async isModelFullyCached() {\n    try {\n      // 检查模型元数据\n      const metadata = await this.getModelMetadata();\n      if (!metadata || !metadata.totalChunks || metadata.totalChunks === 0) {\n        return false;\n      }\n\n      // 检查所有分块是否存在\n      for (let i = 0; i < metadata.totalChunks; i++) {\n        const chunkId = `${this.options.modelId}_chunk_${i}`;\n        const hasChunk = await cacheService.hasModel(chunkId);\n        if (!hasChunk) {\n          return false;\n        }\n      }\n\n      return true;\n    } catch (error) {\n      console.error('检查模型缓存状态失败:', error);\n      return false;\n    }\n  }\n\n  /**\n   * 获取模型文件大小\n   * @returns {Promise<Number>} 文件大小（字节）\n   */\n  async getModelSize() {\n    try {\n      // 检查缓存的元数据\n      const metadata = await this.getModelMetadata();\n      if (metadata && metadata.totalSize) {\n        return metadata.totalSize;\n      }\n\n      // 发送HEAD请求获取文件大小\n      const response = await fetch(this.options.modelUrl, { \n        method: 'HEAD',\n        cache: 'no-store'\n      });\n      \n      if (!response.ok) {\n        throw new Error(`获取模型大小失败: ${response.status} ${response.statusText}`);\n      }\n      \n      const contentLength = parseInt(response.headers.get('content-length') || '0');\n      if (contentLength === 0) {\n        throw new Error('无法获取模型大小');\n      }\n      \n      return contentLength;\n    } catch (error) {\n      console.error('获取模型大小失败:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 分块下载模型\n   * @param {Object} callbacks 回调函数集合\n   * @returns {Promise<ArrayBuffer>} 完整的模型数据\n   */\n  async downloadModelInChunks(callbacks = {}) {\n    if (this.isLoading) {\n      throw new Error('模型正在下载中');\n    }\n\n    try {\n      this.isLoading = true;\n      this.progress = 0;\n      this.error = null;\n      this.abortController = new AbortController();\n\n      // 获取模型大小\n      this.totalSize = await this.getModelSize();\n      \n      // 动态确定最佳分块大小\n      const chunkSize = await this.determineOptimalChunkSize();\n      \n      // 计算分块数量\n      this.totalChunks = Math.ceil(this.totalSize / chunkSize);\n      this.loadedChunks = 0;\n\n      // 保存元数据\n      await this.saveModelMetadata({\n        modelId: this.options.modelId,\n        modelUrl: this.options.modelUrl,\n        totalSize: this.totalSize,\n        totalChunks: this.totalChunks,\n        chunkSize: chunkSize,\n        timestamp: Date.now()\n      });\n\n      // 创建一个ArrayBuffer来存储完整模型\n      const modelData = new ArrayBuffer(this.totalSize);\n      const modelView = new Uint8Array(modelData);\n\n      // 检查哪些分块已经缓存\n      const downloadTasks = [];\n      for (let i = 0; i < this.totalChunks; i++) {\n        const chunkId = `${this.options.modelId}_chunk_${i}`;\n        const start = i * chunkSize;\n        const end = Math.min(start + chunkSize - 1, this.totalSize - 1);\n        \n        // 检查分块是否已缓存\n        const hasChunk = await cacheService.hasModel(chunkId);\n        \n        if (hasChunk) {\n          // 从缓存加载分块\n          const chunkData = await cacheService.getModel(chunkId);\n          modelView.set(new Uint8Array(chunkData), start);\n          this.loadedChunks++;\n          \n          // 更新进度\n          this.progress = this.loadedChunks / this.totalChunks;\n          if (callbacks.onProgress) {\n            callbacks.onProgress(this.progress);\n          }\n        } else {\n          // 创建下载任务\n          downloadTasks.push({ chunkId, start, end });\n        }\n      }\n\n      // 如果所有分块都已缓存，直接返回\n      if (downloadTasks.length === 0) {\n        if (callbacks.onComplete) {\n          callbacks.onComplete(modelData);\n        }\n        return modelData;\n      }\n\n      // 下载未缓存的分块\n      for (const task of downloadTasks) {\n        // 检查是否已取消\n        if (this.abortController.signal.aborted) {\n          throw new Error('下载已取消');\n        }\n\n        try {\n          // 发送带Range头的请求\n          const response = await fetch(this.options.modelUrl, {\n            headers: { Range: `bytes=${task.start}-${task.end}` },\n            signal: this.abortController.signal\n          });\n\n          if (!response.ok && response.status !== 206) {\n            throw new Error(`分块下载失败: ${response.status} ${response.statusText}`);\n          }\n\n          // 获取分块数据\n          const chunkBuffer = await response.arrayBuffer();\n          \n          // 保存到缓存\n          await cacheService.saveModel(task.chunkId, chunkBuffer);\n          \n          // 添加到完整模型\n          modelView.set(new Uint8Array(chunkBuffer), task.start);\n          \n          // 更新进度\n          this.loadedChunks++;\n          this.progress = this.loadedChunks / this.totalChunks;\n          \n          if (callbacks.onProgress) {\n            callbacks.onProgress(this.progress);\n          }\n        } catch (error) {\n          if (error.name === 'AbortError') {\n            throw new Error('下载已取消');\n          }\n          throw error;\n        }\n      }\n\n      // 下载完成\n      if (callbacks.onComplete) {\n        callbacks.onComplete(modelData);\n      }\n\n      return modelData;\n    } catch (error) {\n      this.error = error;\n      console.error('模型下载失败:', error);\n\n      if (callbacks.onError) {\n        callbacks.onError(error);\n      }\n\n      throw error;\n    } finally {\n      this.isLoading = false;\n      this.abortController = null;\n    }\n  }\n\n  /**\n   * 从缓存加载完整模型\n   * @returns {Promise<ArrayBuffer>} 完整的模型数据\n   */\n  async loadModelFromCache() {\n    try {\n      // 获取元数据\n      const metadata = await this.getModelMetadata();\n      if (!metadata) {\n        throw new Error('模型元数据不存在');\n      }\n\n      // 创建一个ArrayBuffer来存储完整模型\n      const modelData = new ArrayBuffer(metadata.totalSize);\n      const modelView = new Uint8Array(modelData);\n\n      // 加载所有分块\n      for (let i = 0; i < metadata.totalChunks; i++) {\n        const chunkId = `${this.options.modelId}_chunk_${i}`;\n        const chunkData = await cacheService.getModel(chunkId);\n        \n        if (!chunkData) {\n          throw new Error(`分块 ${i} 不存在`);\n        }\n        \n        const start = i * metadata.chunkSize;\n        modelView.set(new Uint8Array(chunkData), start);\n      }\n\n      return modelData;\n    } catch (error) {\n      console.error('从缓存加载模型失败:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 加载模型（从缓存或下载）\n   * @param {Object} callbacks 回调函数集合\n   * @returns {Promise<ArrayBuffer>} 完整的模型数据\n   */\n  async loadModel(callbacks = {}) {\n    try {\n      // 检查是否已完全缓存\n      const isCached = await this.isModelFullyCached();\n\n      if (isCached) {\n        // 从缓存加载\n        if (callbacks.onProgress) {\n          callbacks.onProgress(0.5); // 设置初始进度\n        }\n        \n        const modelData = await this.loadModelFromCache();\n        \n        if (callbacks.onProgress) {\n          callbacks.onProgress(1); // 设置完成进度\n        }\n        \n        if (callbacks.onComplete) {\n          callbacks.onComplete(modelData);\n        }\n        \n        return modelData;\n      } else {\n        // 下载模型\n        return await this.downloadModelInChunks(callbacks);\n      }\n    } catch (error) {\n      console.error('模型加载失败:', error);\n      \n      if (callbacks.onError) {\n        callbacks.onError(error);\n      }\n      \n      throw error;\n    }\n  }\n\n  /**\n   * 取消下载\n   */\n  cancelDownload() {\n    if (this.abortController) {\n      this.abortController.abort();\n    }\n  }\n\n  /**\n   * 清除模型缓存\n   * @returns {Promise<Boolean>} 是否清除成功\n   */\n  async clearModelCache() {\n    try {\n      // 获取元数据\n      const metadata = await this.getModelMetadata();\n      if (!metadata) {\n        return true; // 没有元数据，视为清除成功\n      }\n\n      // 删除所有分块\n      for (let i = 0; i < metadata.totalChunks; i++) {\n        const chunkId = `${this.options.modelId}_chunk_${i}`;\n        await cacheService.deleteModel(chunkId);\n      }\n\n      // 删除元数据\n      await cacheService.deleteModel(this.metadataKey);\n\n      return true;\n    } catch (error) {\n      console.error('清除模型缓存失败:', error);\n      return false;\n    }\n  }\n}\n\n// 创建单例实例\nconst progressiveLoadService = new ProgressiveLoadService();\nexport default progressiveLoadService;\n","/**\n * WebLLM模型服务\n * 使用@mlc-ai/web-llm库实现的模型服务\n */\nimport cacheService from './cacheService';\nimport progressiveLoadService from './progressiveLoadService';\n\nclass WebLLMModelService {\n  /**\n   * 构造函数\n   * @param {Object} options 配置选项\n   */\n  constructor(options = {}) {\n    this.options = {\n      modelId: 'Qwen/Qwen3.0-0.6B-Chat-GGUF',\n      modelSize: '0.6B',\n      quantization: 'q4_0',\n      useWebGPU: false, // 默认使用CPU模式\n      useProgressiveLoading: true,\n      ...options\n    };\n\n    this.model = null;\n    this.chat = null;\n    this.isLoading = false;\n    this.progress = 0;\n    this.error = null;\n    this.loadingStage = '准备中';\n\n    // 模型URL\n    this.modelUrl = options.modelUrl || 'https://cdn.jsppt.com/models/qwen3-0.6b-q4.gguf';\n\n    // 配置渐进式加载服务\n    if (this.options.useProgressiveLoading) {\n      progressiveLoadService.options.modelId = this.options.modelId;\n      progressiveLoadService.options.modelUrl = this.modelUrl;\n    }\n\n    // 系统提示词\n    this.systemPrompt = options.systemPrompt || `你是一个专业的演示文稿生成助手，擅长创建Marp格式的Markdown演示文稿。\n请根据用户的主题生成一个完整的演示文稿，包含以下内容：\n1. 封面页：包含主题标题\n2. 目录页：列出演示文稿的主要内容\n3. 内容页：每页一个要点，包含简洁的要点列表\n4. 总结页：总结主要观点\n\n遵循以下Marp格式规范:\n1. 文档开头必须包含以下前置元数据:\n   ---\n   marp: true\n   theme: default\n   paginate: true\n   ---\n\n2. 使用\"---\"分隔不同的幻灯片\n\n3. 幻灯片结构指南:\n   - 第一张幻灯片应为标题页，包含主标题和副标题\n   - 第二张幻灯片通常为目录或概述\n   - 最后一张幻灯片应为总结或联系方式\n\n4. 格式化技巧:\n   - 使用 # 表示一级标题，## 表示二级标题，依此类推\n   - 每张幻灯片内容简洁，通常5-7个要点为宜\n   - 可以使用 ![bg](图片URL) 设置背景图片\n   - 可以使用 ![bg left:40%](图片URL) 创建分栏布局\n\n请直接输出Markdown内容，不要有额外的解释。`;\n  }\n\n  /**\n   * 检查模型是否已加载\n   * @returns {Boolean} 模型是否已加载\n   */\n  isModelLoaded() {\n    return this.model !== null && this.chat !== null;\n  }\n\n  /**\n   * 获取加载进度\n   * @returns {Number} 加载进度（0-1）\n   */\n  getProgress() {\n    return this.progress;\n  }\n\n  /**\n   * 获取加载阶段描述\n   * @returns {String} 加载阶段描述\n   */\n  getLoadingStage() {\n    return this.loadingStage;\n  }\n\n  /**\n   * 加载模型\n   * @param {Object} callbacks 回调函数集合\n   * @returns {Promise<Boolean>} 加载是否成功\n   */\n  async loadModel(callbacks = {}) {\n    if (this.isLoading) return false;\n\n    try {\n      this.isLoading = true;\n      this.error = null;\n\n      // 设置初始进度\n      this.progress = 0;\n      this.loadingStage = '准备中';\n      if (callbacks.onProgress) {\n        callbacks.onProgress(this.progress);\n      }\n\n      // 动态导入WebLLM库\n      this.loadingStage = '加载WebLLM库';\n      const webllm = await import('@mlc-ai/web-llm');\n\n      // 创建聊天实例\n      this.loadingStage = '初始化模型';\n\n      // 使用CreateMLCEngine工厂函数创建引擎\n      try {\n        // 最新版本使用CreateMLCEngine工厂函数\n        if (typeof webllm.CreateMLCEngine === 'function') {\n          this.chat = await webllm.CreateMLCEngine(\n            this.options.modelId,\n            {\n              initProgressCallback: (progress) => {\n                this.progress = progress.progress || 0;\n                this.loadingStage = progress.text || '加载中';\n              },\n              useWebGPU: this.options.useWebGPU\n            }\n          );\n        }\n        // 兼容旧版本\n        else if (typeof webllm.ChatModule === 'function' && /^\\s*class\\s+/.test(webllm.ChatModule.toString())) {\n          // 如果是构造函数（类），使用new\n          this.chat = new webllm.ChatModule();\n        } else if (typeof webllm.createChatModule === 'function') {\n          // 如果有工厂函数，使用工厂函数\n          this.chat = webllm.createChatModule();\n        } else if (typeof webllm.ChatModule === 'function') {\n          // 如果是普通函数，直接调用\n          this.chat = webllm.ChatModule();\n        } else if (webllm.chat) {\n          // 如果有预创建的实例\n          this.chat = webllm.chat;\n        } else {\n          // 尝试使用默认导出\n          this.chat = new webllm.default();\n        }\n      } catch (error) {\n        console.error(\"创建WebLLM引擎失败:\", error);\n        throw new Error(`创建WebLLM引擎失败: ${error.message}`);\n      }\n\n      // 如果已经使用CreateMLCEngine创建了引擎，则不需要再初始化\n      if (!(this.chat.chat && this.chat.chat.completions)) {\n        // 配置WebGPU/WebGL\n        const initOptions = {\n          // 如果useWebGPU为false，则使用WebGL\n          wasmUrl: this.options.useWebGPU ? undefined : 'https://cdn.jsdelivr.net/npm/@mlc-ai/web-llm/lib/',\n          // 如果useWebGPU为true，则使用WebGPU\n          useWebGPU: this.options.useWebGPU\n        };\n\n        // 初始化ChatModule (旧版API)\n        if (typeof this.chat.init === 'function') {\n          await this.chat.init(initOptions);\n        }\n\n        if (this.options.useProgressiveLoading) {\n          // 使用渐进式加载\n          this.loadingStage = '检查模型缓存';\n          const isCached = await progressiveLoadService.isModelFullyCached();\n\n          if (isCached) {\n            this.loadingStage = '从缓存加载模型';\n          } else {\n            this.loadingStage = '下载模型文件';\n          }\n\n          // 加载或下载模型\n          await progressiveLoadService.loadModel({\n            onProgress: (p) => {\n              // 下载和缓存占总进度的80%\n              this.progress = p * 0.8;\n\n              if (p < 0.1) {\n                this.loadingStage = '准备下载';\n              } else if (p < 0.8) {\n                this.loadingStage = '下载模型文件';\n              } else if (p < 0.9) {\n                this.loadingStage = '保存到缓存';\n              } else {\n                this.loadingStage = '准备加载模型';\n              }\n\n              if (callbacks.onProgress) {\n                callbacks.onProgress(this.progress);\n              }\n            },\n            onError: (error) => {\n              this.loadingStage = '下载失败';\n              throw error;\n            }\n          });\n\n          // 使用自定义加载方式\n          this.loadingStage = '加载模型到内存';\n\n          // 设置模型配置\n          const modelConfig = {\n            model_list: [\n              {\n                model_id: this.options.modelId,\n                model_url: this.modelUrl,\n                // 可以添加其他配置，如量化参数等\n                local_id: this.options.modelId\n              }\n            ]\n          };\n\n          // 加载模型 (旧版API)\n          if (typeof this.chat.reload === 'function') {\n            await this.chat.reload(this.options.modelId, modelConfig);\n          }\n        } else {\n          // 使用WebLLM内置的加载方式\n          this.loadingStage = '下载模型文件';\n\n          // 设置进度回调 (旧版API)\n          if (typeof this.chat.setInitProgressCallback === 'function') {\n            this.chat.setInitProgressCallback((report) => {\n              const stage = report.progress.stage;\n              let progress = 0;\n\n              if (stage === 'download') {\n                // 下载阶段\n                progress = report.progress.progress * 0.8; // 下载占总进度的80%\n                this.loadingStage = '下载模型文件';\n              } else if (stage === 'load') {\n                // 加载阶段\n                progress = 0.8 + report.progress.progress * 0.2; // 加载占总进度的20%\n                this.loadingStage = '加载模型到内存';\n              }\n\n              this.progress = progress;\n              if (callbacks.onProgress) {\n                callbacks.onProgress(progress);\n              }\n            });\n          }\n\n          // 初始化模型 (旧版API)\n          if (typeof this.chat.reload === 'function') {\n            await this.chat.reload(this.options.modelId, {\n              model_list: [\n                {\n                  model_id: this.options.modelId,\n                  model_url: this.modelUrl\n                }\n              ]\n            });\n          }\n        }\n\n        // 设置系统提示词 (旧版API)\n        this.loadingStage = '配置模型';\n        if (typeof this.chat.resetChat === 'function') {\n          await this.chat.resetChat(this.systemPrompt);\n        }\n      } else {\n        // 新版API已经在创建引擎时完成了初始化\n        this.loadingStage = '模型已加载';\n      }\n\n      // 模型加载完成\n      this.model = this.chat;\n      this.progress = 1;\n      this.loadingStage = '加载完成';\n\n      if (callbacks.onProgress) {\n        callbacks.onProgress(1);\n      }\n\n      if (callbacks.onSuccess) {\n        callbacks.onSuccess();\n      }\n\n      return true;\n    } catch (error) {\n      this.error = error;\n      console.error(\"WebLLM模型加载失败:\", error);\n      this.loadingStage = '加载失败';\n\n      if (callbacks.onError) {\n        callbacks.onError(error);\n      }\n\n      return false;\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  /**\n   * 生成Marp格式的Markdown\n   * @param {String} prompt 用户提示词\n   * @param {Object} options 生成选项\n   * @returns {Promise<String>} 生成的Markdown内容\n   */\n  async generateMarpMarkdown(prompt, options = {}) {\n    if (!this.isModelLoaded()) {\n      throw new Error(\"模型尚未加载\");\n    }\n\n    try {\n      // 默认生成选项\n      const defaultOptions = {\n        stream: false,\n        max_tokens: 2048,\n        temperature: 0.7,\n        top_p: 0.9\n      };\n\n      // 合并选项\n      const generateOptions = { ...defaultOptions, ...options };\n\n      // 构建提示词\n      const fullPrompt = `请为主题\"${prompt}\"创建一个Marp格式的演示文稿。`;\n\n      // 构建消息数组\n      const messages = [\n        { role: \"system\", content: this.systemPrompt },\n        { role: \"user\", content: fullPrompt }\n      ];\n\n      let markdown = '';\n\n      // 检查是否使用新的OpenAI兼容API\n      if (this.chat.chat && this.chat.chat.completions && typeof this.chat.chat.completions.create === 'function') {\n        // 使用OpenAI兼容API\n        const response = await this.chat.chat.completions.create({\n          messages,\n          ...generateOptions\n        });\n\n        markdown = response.choices[0].message.content;\n      }\n      // 兼容旧版本API\n      else if (typeof this.chat.generate === 'function') {\n        // 使用旧版API\n        const reply = await this.chat.generate(messages, generateOptions);\n        markdown = reply.text;\n      }\n      // 尝试使用MLCEngine的getMessage方法\n      else if (typeof this.chat.getMessage === 'function') {\n        await this.chat.resetChat();\n        for (const message of messages) {\n          await this.chat.generate(message.content);\n        }\n        markdown = await this.chat.getMessage();\n      }\n      else {\n        throw new Error(\"无法找到有效的生成方法\");\n      }\n\n      // 确保Markdown包含Marp前置元数据\n      if (!markdown.startsWith('---\\nmarp: true')) {\n        markdown = `---\\nmarp: true\\ntheme: default\\npaginate: true\\n---\\n\\n${markdown}`;\n      }\n\n      return markdown;\n    } catch (error) {\n      console.error(\"生成失败:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * 释放模型资源\n   * @returns {Promise<void>}\n   */\n  async unloadModel() {\n    if (this.chat) {\n      try {\n        // 释放模型资源\n        if (typeof this.chat.unload === 'function') {\n          await this.chat.unload();\n        } else if (typeof this.chat.dispose === 'function') {\n          await this.chat.dispose();\n        }\n        this.model = null;\n        this.chat = null;\n      } catch (error) {\n        console.error(\"模型卸载失败:\", error);\n      }\n    }\n  }\n\n  /**\n   * 清除模型缓存\n   * @returns {Promise<Boolean>} 是否清除成功\n   */\n  async clearModelCache() {\n    if (this.options.useProgressiveLoading) {\n      return await progressiveLoadService.clearModelCache();\n    }\n    return true;\n  }\n}\n\n// 创建默认实例\nconst webllmModelService = new WebLLMModelService();\nexport default webllmModelService;\n\n// 同时导出类，以便可以创建自定义实例\nexport { WebLLMModelService };\n","/**\n * WebGPU模型服务\n * 使用WebGPU加速的模型服务实现\n */\nimport cacheService from './cacheService';\n\nclass WebGPUModelService {\n  /**\n   * 构造函数\n   * @param {GPUDevice} device WebGPU设备\n   */\n  constructor(device) {\n    this.device = device;\n    this.model = null;\n    this.isLoading = false;\n    this.progress = 0;\n    this.error = null;\n    this.modelId = 'qwen3-0.6b';\n    this.modelUrl = 'https://cdn.jsppt.com/models/qwen3-0.6b-q4.gguf';\n  }\n\n  /**\n   * 检查模型是否已加载\n   * @returns {Boolean} 模型是否已加载\n   */\n  isModelLoaded() {\n    return this.model !== null;\n  }\n\n  /**\n   * 获取加载进度\n   * @returns {Number} 加载进度（0-1）\n   */\n  getProgress() {\n    return this.progress;\n  }\n\n  /**\n   * 加载模型\n   * @param {Object} callbacks 回调函数集合\n   * @returns {Promise<Boolean>} 加载是否成功\n   */\n  async loadModel(callbacks = {}) {\n    if (this.isLoading) return false;\n\n    try {\n      this.isLoading = true;\n      this.error = null;\n\n      // 检查缓存\n      const isCached = await cacheService.hasModel(this.modelId);\n      \n      // 设置初始进度\n      this.progress = 0;\n      if (callbacks.onProgress) {\n        callbacks.onProgress(this.progress);\n      }\n\n      // 模拟模型加载过程\n      // 注意：这里是模拟实现，实际项目中需要替换为真实的WebLLM加载逻辑\n      if (!isCached) {\n        // 模拟下载过程\n        for (let i = 0; i < 10; i++) {\n          await new Promise(resolve => setTimeout(resolve, 500));\n          this.progress = (i + 1) / 10;\n          if (callbacks.onProgress) {\n            callbacks.onProgress(this.progress);\n          }\n        }\n        \n        // 模拟缓存模型\n        await cacheService.saveModel(this.modelId, { timestamp: Date.now() });\n      } else {\n        // 模拟从缓存加载\n        for (let i = 0; i < 3; i++) {\n          await new Promise(resolve => setTimeout(resolve, 300));\n          this.progress = (i + 1) / 3;\n          if (callbacks.onProgress) {\n            callbacks.onProgress(this.progress);\n          }\n        }\n      }\n\n      // 模拟创建模型实例\n      this.model = {\n        generate: async (prompt) => {\n          // 模拟生成过程\n          await new Promise(resolve => setTimeout(resolve, 2000));\n          return { text: this.generateDummyMarkdown(prompt) };\n        }\n      };\n\n      if (callbacks.onSuccess) {\n        callbacks.onSuccess();\n      }\n\n      return true;\n    } catch (error) {\n      this.error = error;\n      console.error(\"模型加载失败:\", error);\n\n      if (callbacks.onError) {\n        callbacks.onError(error);\n      }\n\n      return false;\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  /**\n   * 生成Marp格式的Markdown\n   * @param {String} prompt 用户提示词\n   * @returns {Promise<String>} 生成的Markdown内容\n   */\n  async generateMarpMarkdown(prompt) {\n    if (!this.isModelLoaded()) {\n      throw new Error(\"模型尚未加载\");\n    }\n\n    try {\n      // 模拟调用模型生成内容\n      const response = await this.model.generate(prompt);\n      return response.text;\n    } catch (error) {\n      console.error(\"生成失败:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * 释放模型资源\n   * @returns {Promise<void>}\n   */\n  async unloadModel() {\n    if (this.model) {\n      try {\n        // 模拟卸载模型\n        await new Promise(resolve => setTimeout(resolve, 500));\n        this.model = null;\n      } catch (error) {\n        console.error(\"模型卸载失败:\", error);\n      }\n    }\n  }\n\n  /**\n   * 生成示例Markdown（仅用于演示）\n   * @param {String} prompt 用户提示词\n   * @returns {String} 示例Markdown内容\n   */\n  generateDummyMarkdown(prompt) {\n    return `---\nmarp: true\ntheme: default\npaginate: true\n---\n\n# ${prompt}\n\n---\n\n## 目录\n\n1. 引言\n2. 主要内容\n3. 案例分析\n4. 总结与展望\n\n---\n\n## 引言\n\n- ${prompt}是当今热门话题\n- 具有广泛的应用前景\n- 正在快速发展和演变\n\n---\n\n## 主要内容\n\n- 核心概念和原理\n- 技术架构和实现方式\n- 优势与局限性\n- 最新研究进展\n\n---\n\n## 案例分析\n\n- 案例1：行业应用示例\n- 案例2：创新实践\n- 案例3：未来展望\n\n---\n\n## 总结与展望\n\n- ${prompt}的重要性日益凸显\n- 未来发展趋势\n- 潜在机会与挑战\n\n---\n\n# 谢谢观看！\n\n联系方式：example@jsppt.com`;\n  }\n}\n\nexport default WebGPUModelService;\n","/**\n * WebGL模型服务\n * 使用WebGL加速的模型服务实现\n */\nimport cacheService from './cacheService';\n\nclass WebGLModelService {\n  /**\n   * 构造函数\n   * @param {WebGLRenderingContext|WebGL2RenderingContext} context WebGL上下文\n   * @param {Number} version WebGL版本\n   */\n  constructor(context, version) {\n    this.context = context;\n    this.version = version;\n    this.model = null;\n    this.isLoading = false;\n    this.progress = 0;\n    this.error = null;\n    this.modelId = 'qwen3-0.6b';\n    this.modelUrl = 'https://cdn.jsppt.com/models/qwen3-0.6b-q4.gguf';\n  }\n\n  /**\n   * 检查模型是否已加载\n   * @returns {Boolean} 模型是否已加载\n   */\n  isModelLoaded() {\n    return this.model !== null;\n  }\n\n  /**\n   * 获取加载进度\n   * @returns {Number} 加载进度（0-1）\n   */\n  getProgress() {\n    return this.progress;\n  }\n\n  /**\n   * 加载模型\n   * @param {Object} callbacks 回调函数集合\n   * @returns {Promise<Boolean>} 加载是否成功\n   */\n  async loadModel(callbacks = {}) {\n    if (this.isLoading) return false;\n\n    try {\n      this.isLoading = true;\n      this.error = null;\n\n      // 检查缓存\n      const isCached = await cacheService.hasModel(this.modelId);\n      \n      // 设置初始进度\n      this.progress = 0;\n      if (callbacks.onProgress) {\n        callbacks.onProgress(this.progress);\n      }\n\n      // 模拟模型加载过程\n      // 注意：这里是模拟实现，实际项目中需要替换为真实的WebLLM加载逻辑\n      if (!isCached) {\n        // 模拟下载过程\n        for (let i = 0; i < 10; i++) {\n          await new Promise(resolve => setTimeout(resolve, 600)); // WebGL比WebGPU稍慢\n          this.progress = (i + 1) / 10;\n          if (callbacks.onProgress) {\n            callbacks.onProgress(this.progress);\n          }\n        }\n        \n        // 模拟缓存模型\n        await cacheService.saveModel(this.modelId, { timestamp: Date.now() });\n      } else {\n        // 模拟从缓存加载\n        for (let i = 0; i < 4; i++) {\n          await new Promise(resolve => setTimeout(resolve, 400));\n          this.progress = (i + 1) / 4;\n          if (callbacks.onProgress) {\n            callbacks.onProgress(this.progress);\n          }\n        }\n      }\n\n      // 模拟创建模型实例\n      this.model = {\n        generate: async (prompt) => {\n          // 模拟生成过程\n          await new Promise(resolve => setTimeout(resolve, 3000)); // WebGL生成比WebGPU慢\n          return { text: this.generateDummyMarkdown(prompt) };\n        }\n      };\n\n      if (callbacks.onSuccess) {\n        callbacks.onSuccess();\n      }\n\n      return true;\n    } catch (error) {\n      this.error = error;\n      console.error(\"模型加载失败:\", error);\n\n      if (callbacks.onError) {\n        callbacks.onError(error);\n      }\n\n      return false;\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  /**\n   * 生成Marp格式的Markdown\n   * @param {String} prompt 用户提示词\n   * @returns {Promise<String>} 生成的Markdown内容\n   */\n  async generateMarpMarkdown(prompt) {\n    if (!this.isModelLoaded()) {\n      throw new Error(\"模型尚未加载\");\n    }\n\n    try {\n      // 模拟调用模型生成内容\n      const response = await this.model.generate(prompt);\n      return response.text;\n    } catch (error) {\n      console.error(\"生成失败:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * 释放模型资源\n   * @returns {Promise<void>}\n   */\n  async unloadModel() {\n    if (this.model) {\n      try {\n        // 模拟卸载模型\n        await new Promise(resolve => setTimeout(resolve, 500));\n        this.model = null;\n      } catch (error) {\n        console.error(\"模型卸载失败:\", error);\n      }\n    }\n  }\n\n  /**\n   * 生成示例Markdown（仅用于演示）\n   * @param {String} prompt 用户提示词\n   * @returns {String} 示例Markdown内容\n   */\n  generateDummyMarkdown(prompt) {\n    return `---\nmarp: true\ntheme: default\npaginate: true\n---\n\n# ${prompt}\n\n---\n\n## 目录\n\n1. 引言\n2. 主要内容\n3. 案例分析\n4. 总结与展望\n\n---\n\n## 引言\n\n- ${prompt}是当今热门话题\n- 具有广泛的应用前景\n- 正在快速发展和演变\n\n---\n\n## 主要内容\n\n- 核心概念和原理\n- 技术架构和实现方式\n- 优势与局限性\n- 最新研究进展\n\n---\n\n## 案例分析\n\n- 案例1：行业应用示例\n- 案例2：创新实践\n- 案例3：未来展望\n\n---\n\n## 总结与展望\n\n- ${prompt}的重要性日益凸显\n- 未来发展趋势\n- 潜在机会与挑战\n\n---\n\n# 谢谢观看！\n\n联系方式：example@jsppt.com`;\n  }\n}\n\nexport default WebGLModelService;\n","/**\n * WASM模型服务\n * 使用WebAssembly的CPU执行模型服务实现\n */\nimport cacheService from './cacheService';\n\nclass WasmModelService {\n  /**\n   * 构造函数\n   */\n  constructor() {\n    this.model = null;\n    this.isLoading = false;\n    this.progress = 0;\n    this.error = null;\n    this.modelId = 'qwen3-0.6b';\n    this.modelUrl = 'https://cdn.jsppt.com/models/qwen3-0.6b-q4.gguf';\n  }\n\n  /**\n   * 检查模型是否已加载\n   * @returns {Boolean} 模型是否已加载\n   */\n  isModelLoaded() {\n    return this.model !== null;\n  }\n\n  /**\n   * 获取加载进度\n   * @returns {Number} 加载进度（0-1）\n   */\n  getProgress() {\n    return this.progress;\n  }\n\n  /**\n   * 加载模型\n   * @param {Object} callbacks 回调函数集合\n   * @returns {Promise<Boolean>} 加载是否成功\n   */\n  async loadModel(callbacks = {}) {\n    if (this.isLoading) return false;\n\n    try {\n      this.isLoading = true;\n      this.error = null;\n\n      // 检查缓存\n      const isCached = await cacheService.hasModel(this.modelId);\n      \n      // 设置初始进度\n      this.progress = 0;\n      if (callbacks.onProgress) {\n        callbacks.onProgress(this.progress);\n      }\n\n      // 模拟模型加载过程\n      // 注意：这里是模拟实现，实际项目中需要替换为真实的WASM模型加载逻辑\n      if (!isCached) {\n        // 模拟下载过程\n        for (let i = 0; i < 10; i++) {\n          await new Promise(resolve => setTimeout(resolve, 700)); // WASM比WebGL更慢\n          this.progress = (i + 1) / 10;\n          if (callbacks.onProgress) {\n            callbacks.onProgress(this.progress);\n          }\n        }\n        \n        // 模拟缓存模型\n        await cacheService.saveModel(this.modelId, { timestamp: Date.now() });\n      } else {\n        // 模拟从缓存加载\n        for (let i = 0; i < 5; i++) {\n          await new Promise(resolve => setTimeout(resolve, 500));\n          this.progress = (i + 1) / 5;\n          if (callbacks.onProgress) {\n            callbacks.onProgress(this.progress);\n          }\n        }\n      }\n\n      // 模拟创建模型实例\n      this.model = {\n        generate: async (prompt) => {\n          // 模拟生成过程\n          await new Promise(resolve => setTimeout(resolve, 4000)); // WASM生成比WebGL更慢\n          return { text: this.generateDummyMarkdown(prompt) };\n        }\n      };\n\n      if (callbacks.onSuccess) {\n        callbacks.onSuccess();\n      }\n\n      return true;\n    } catch (error) {\n      this.error = error;\n      console.error(\"模型加载失败:\", error);\n\n      if (callbacks.onError) {\n        callbacks.onError(error);\n      }\n\n      return false;\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  /**\n   * 生成Marp格式的Markdown\n   * @param {String} prompt 用户提示词\n   * @returns {Promise<String>} 生成的Markdown内容\n   */\n  async generateMarpMarkdown(prompt) {\n    if (!this.isModelLoaded()) {\n      throw new Error(\"模型尚未加载\");\n    }\n\n    try {\n      // 模拟调用模型生成内容\n      const response = await this.model.generate(prompt);\n      return response.text;\n    } catch (error) {\n      console.error(\"生成失败:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * 释放模型资源\n   * @returns {Promise<void>}\n   */\n  async unloadModel() {\n    if (this.model) {\n      try {\n        // 模拟卸载模型\n        await new Promise(resolve => setTimeout(resolve, 500));\n        this.model = null;\n      } catch (error) {\n        console.error(\"模型卸载失败:\", error);\n      }\n    }\n  }\n\n  /**\n   * 生成示例Markdown（仅用于演示）\n   * @param {String} prompt 用户提示词\n   * @returns {String} 示例Markdown内容\n   */\n  generateDummyMarkdown(prompt) {\n    return `---\nmarp: true\ntheme: default\npaginate: true\n---\n\n# ${prompt}\n\n---\n\n## 目录\n\n1. 引言\n2. 主要内容\n3. 案例分析\n4. 总结与展望\n\n---\n\n## 引言\n\n- ${prompt}是当今热门话题\n- 具有广泛的应用前景\n- 正在快速发展和演变\n\n---\n\n## 主要内容\n\n- 核心概念和原理\n- 技术架构和实现方式\n- 优势与局限性\n- 最新研究进展\n\n---\n\n## 案例分析\n\n- 案例1：行业应用示例\n- 案例2：创新实践\n- 案例3：未来展望\n\n---\n\n## 总结与展望\n\n- ${prompt}的重要性日益凸显\n- 未来发展趋势\n- 潜在机会与挑战\n\n---\n\n# 谢谢观看！\n\n联系方式：example@jsppt.com`;\n  }\n}\n\nexport default WasmModelService;\n","/**\n * 远程API模型服务\n * 使用远程API的模型服务实现（兜底方案）\n */\nclass RemoteAPIModelService {\n  /**\n   * 构造函数\n   */\n  constructor() {\n    this.model = null;\n    this.isLoading = false;\n    this.progress = 0;\n    this.error = null;\n    this.apiEndpoint = 'https://api.jsppt.com/generate'; // 示例API端点\n  }\n\n  /**\n   * 检查模型是否已加载\n   * @returns {Boolean} 模型是否已加载\n   */\n  isModelLoaded() {\n    return this.model !== null;\n  }\n\n  /**\n   * 获取加载进度\n   * @returns {Number} 加载进度（0-1）\n   */\n  getProgress() {\n    return this.progress;\n  }\n\n  /**\n   * 加载模型\n   * @param {Object} callbacks 回调函数集合\n   * @returns {Promise<Boolean>} 加载是否成功\n   */\n  async loadModel(callbacks = {}) {\n    if (this.isLoading) return false;\n\n    try {\n      this.isLoading = true;\n      this.error = null;\n      \n      // 设置初始进度\n      this.progress = 0;\n      if (callbacks.onProgress) {\n        callbacks.onProgress(this.progress);\n      }\n\n      // 模拟API连接过程\n      for (let i = 0; i < 3; i++) {\n        await new Promise(resolve => setTimeout(resolve, 500));\n        this.progress = (i + 1) / 3;\n        if (callbacks.onProgress) {\n          callbacks.onProgress(this.progress);\n        }\n      }\n\n      // 模拟创建API客户端\n      this.model = {\n        generate: async (prompt) => {\n          // 模拟API调用\n          await new Promise(resolve => setTimeout(resolve, 2000));\n          return { text: this.generateDummyMarkdown(prompt) };\n        }\n      };\n\n      if (callbacks.onSuccess) {\n        callbacks.onSuccess();\n      }\n\n      return true;\n    } catch (error) {\n      this.error = error;\n      console.error(\"API连接失败:\", error);\n\n      if (callbacks.onError) {\n        callbacks.onError(error);\n      }\n\n      return false;\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  /**\n   * 生成Marp格式的Markdown\n   * @param {String} prompt 用户提示词\n   * @returns {Promise<String>} 生成的Markdown内容\n   */\n  async generateMarpMarkdown(prompt) {\n    if (!this.isModelLoaded()) {\n      throw new Error(\"API客户端尚未初始化\");\n    }\n\n    try {\n      // 模拟调用API生成内容\n      const response = await this.model.generate(prompt);\n      return response.text;\n    } catch (error) {\n      console.error(\"生成失败:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * 释放模型资源\n   * @returns {Promise<void>}\n   */\n  async unloadModel() {\n    if (this.model) {\n      try {\n        // 模拟释放资源\n        await new Promise(resolve => setTimeout(resolve, 200));\n        this.model = null;\n      } catch (error) {\n        console.error(\"资源释放失败:\", error);\n      }\n    }\n  }\n\n  /**\n   * 生成示例Markdown（仅用于演示）\n   * @param {String} prompt 用户提示词\n   * @returns {String} 示例Markdown内容\n   */\n  generateDummyMarkdown(prompt) {\n    return `---\nmarp: true\ntheme: default\npaginate: true\n---\n\n# ${prompt}\n\n---\n\n## 目录\n\n1. 引言\n2. 主要内容\n3. 案例分析\n4. 总结与展望\n\n---\n\n## 引言\n\n- ${prompt}是当今热门话题\n- 具有广泛的应用前景\n- 正在快速发展和演变\n\n---\n\n## 主要内容\n\n- 核心概念和原理\n- 技术架构和实现方式\n- 优势与局限性\n- 最新研究进展\n\n---\n\n## 案例分析\n\n- 案例1：行业应用示例\n- 案例2：创新实践\n- 案例3：未来展望\n\n---\n\n## 总结与展望\n\n- ${prompt}的重要性日益凸显\n- 未来发展趋势\n- 潜在机会与挑战\n\n---\n\n# 谢谢观看！\n\n联系方式：example@jsppt.com`;\n  }\n}\n\nexport default RemoteAPIModelService;\n","/**\n * 模型服务工厂\n * 根据浏览器兼容性创建适合的模型服务实例\n */\nimport compatibilityService from './compatibilityService';\nimport webllmModelService, { WebLLMModelService } from './webllmModelService';\nimport WebGPUModelService from './webgpuModelService';\nimport WebGLModelService from './webglModelService';\nimport WasmModelService from './wasmModelService';\nimport RemoteAPIModelService from './remoteAPIModelService';\n\nclass ModelServiceFactory {\n  /**\n   * 创建适合当前浏览器的模型服务\n   * @param {Object} options 配置选项\n   * @returns {Promise<Object>} 模型服务实例\n   */\n  async createModelService(options = {}) {\n    // 获取完整的兼容性报告\n    const compatibilityReport = await compatibilityService.getFullCompatibilityReport();\n    console.log('浏览器兼容性报告:', compatibilityReport);\n\n    // 检查是否强制使用特定模型服务\n    if (options.forceService) {\n      switch (options.forceService) {\n        case 'webllm':\n          console.log('强制使用WebLLM模型服务');\n          return new WebLLMModelService(options);\n        case 'webgpu':\n          console.log('强制使用WebGPU模型服务');\n          return new WebGPUModelService(options);\n        case 'webgl':\n          console.log('强制使用WebGL模型服务');\n          return new WebGLModelService(options);\n        case 'wasm':\n          console.log('强制使用WASM模型服务');\n          return new WasmModelService(options);\n        case 'remote':\n          console.log('强制使用远程API模型服务');\n          return new RemoteAPIModelService(options);\n      }\n    }\n\n    // 根据浏览器兼容性选择最佳模型服务\n\n    // 首先尝试使用WebLLM（优先使用WebGPU加速）\n    if (compatibilityReport.webgpu.supported) {\n      console.log('使用WebLLM（WebGPU加速）');\n      return new WebLLMModelService({\n        ...options,\n        useWebGPU: true\n      });\n    }\n\n    // 如果WebGPU不可用，尝试使用WebGL加速的WebLLM\n    if (compatibilityReport.webgl.supported) {\n      console.log('使用WebLLM（WebGL加速）');\n      return new WebLLMModelService({\n        ...options,\n        useWebGPU: false\n      });\n    }\n\n    // 如果设备性能足够，使用WASM CPU执行\n    if (compatibilityReport.performance.performanceTier !== 'low') {\n      console.log('使用WASM CPU执行');\n      return new WasmModelService(options);\n    }\n\n    // 如果是移动设备或低性能设备，使用远程API\n    if (compatibilityReport.isMobile || compatibilityReport.performance.performanceTier === 'low') {\n      console.log('使用远程API（移动设备或低性能设备）');\n      return new RemoteAPIModelService(options);\n    }\n\n    // 最后回退到远程API\n    console.log('使用远程API（默认回退）');\n    return new RemoteAPIModelService(options);\n  }\n\n  /**\n   * 获取模型服务选项\n   * @returns {Array} 可用的模型服务选项\n   */\n  getModelServiceOptions() {\n    return [\n      { id: 'auto', name: '自动选择最佳方式' },\n      { id: 'webllm', name: 'WebLLM（浏览器本地运行）' },\n      { id: 'webgpu', name: 'WebGPU加速（高性能）' },\n      { id: 'webgl', name: 'WebGL加速（兼容性好）' },\n      { id: 'wasm', name: 'WASM CPU执行（通用）' },\n      { id: 'remote', name: '远程API（低性能设备）' }\n    ];\n  }\n}\n\nconst modelServiceFactory = new ModelServiceFactory();\nexport default modelServiceFactory;\n","<template>\n  <div class=\"app-container\">\n    <header class=\"app-header\">\n      <div class=\"container header-content\">\n        <div class=\"logo-section\">\n          <h1 class=\"app-title\">jsPPT</h1>\n          <div class=\"app-subtitle\">AI演示文稿生成器</div>\n        </div>\n        <div class=\"header-actions\" v-if=\"modelLoaded\">\n          <button @click=\"showSettings = true\" class=\"btn btn-sm btn-outline\">\n            <span class=\"icon\">⚙️</span> 设置\n          </button>\n          <button @click=\"showHelp = true\" class=\"btn btn-sm btn-outline\">\n            <span class=\"icon\">❓</span> 帮助\n          </button>\n        </div>\n      </div>\n    </header>\n\n    <main class=\"app-main\">\n      <!-- 模型加载界面 -->\n      <div v-if=\"!modelLoaded\" class=\"model-loading container\">\n        <div class=\"loading-card\">\n          <h2>准备AI模型</h2>\n          <div class=\"model-info\">\n            <div class=\"model-icon\">🤖</div>\n            <div class=\"model-details\">\n              <p class=\"model-name\">Qwen 3.0-0.6B</p>\n              <p class=\"model-description\">轻量级AI模型，适合在浏览器中运行</p>\n            </div>\n          </div>\n\n          <div class=\"progress-section\">\n            <div class=\"progress-status\">\n              <span>{{ loadingStage }}</span>\n              <span>{{ progressText }}</span>\n            </div>\n            <div class=\"progress-bar\">\n              <div class=\"progress\" :style=\"{ width: `${progress * 100}%` }\"></div>\n            </div>\n          </div>\n\n          <button\n            @click=\"loadModel\"\n            :disabled=\"isLoading\"\n            class=\"btn btn-primary load-btn\"\n          >\n            {{ isLoading ? '加载中...' : '开始加载' }}\n          </button>\n\n          <div class=\"compatibility-info\">\n            <h3>浏览器兼容性</h3>\n            <div class=\"compatibility-status\" :class=\"{'status-ok': compatibilityInfo.supported, 'status-warning': !compatibilityInfo.supported}\">\n              <span class=\"status-icon\">{{ compatibilityInfo.supported ? '✅' : '⚠️' }}</span>\n              <div class=\"status-details\">\n                <p v-if=\"compatibilityInfo.supported\">\n                  您的浏览器支持 {{ compatibilityInfo.accelerationMethod }}，可以获得最佳体验。\n                </p>\n                <p v-else>\n                  您的浏览器可能不支持最佳的AI加速方式。{{ compatibilityInfo.reason }}\n                </p>\n              </div>\n            </div>\n\n            <div class=\"advanced-options\">\n              <details>\n                <summary>高级选项</summary>\n                <div class=\"options-content\">\n                  <div class=\"option-group\">\n                    <label for=\"execution-mode\">执行模式:</label>\n                    <select id=\"execution-mode\" v-model=\"executionMode\" class=\"select-input\">\n                      <option v-for=\"option in modelServiceOptions\" :key=\"option.id\" :value=\"option.id\">\n                        {{ option.name }}\n                      </option>\n                    </select>\n                  </div>\n                </div>\n              </details>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 编辑器界面 -->\n      <div v-else class=\"editor-container container\">\n        <div class=\"editor-header\">\n          <h2>创建演示文稿</h2>\n          <div class=\"theme-selector\">\n            <label for=\"theme-select\">主题:</label>\n            <select id=\"theme-select\" v-model=\"selectedTheme\" class=\"select-input\">\n              <option v-for=\"theme in availableThemes\" :key=\"theme.id\" :value=\"theme.id\">\n                {{ theme.name }}\n              </option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"editor-content\">\n          <div class=\"input-section\">\n            <div class=\"section-header\">\n              <h3>输入您的演示文稿主题</h3>\n              <div class=\"input-actions\">\n                <button @click=\"clearPrompt\" class=\"btn btn-sm btn-text\" :disabled=\"!prompt\">\n                  <span class=\"icon\">🗑️</span> 清空\n                </button>\n                <button @click=\"insertTemplate\" class=\"btn btn-sm btn-text\">\n                  <span class=\"icon\">📋</span> 模板\n                </button>\n              </div>\n            </div>\n\n            <textarea\n              v-model=\"prompt\"\n              placeholder=\"例如：人工智能在医疗领域的应用与未来发展\"\n              rows=\"5\"\n              class=\"prompt-input\"\n              :disabled=\"isGenerating\"\n            ></textarea>\n\n            <div class=\"generation-options\">\n              <div class=\"option-group\">\n                <label for=\"slide-count\">幻灯片数量:</label>\n                <select id=\"slide-count\" v-model=\"slideCount\" class=\"select-input\">\n                  <option value=\"auto\">自动</option>\n                  <option value=\"5\">5张</option>\n                  <option value=\"10\">10张</option>\n                  <option value=\"15\">15张</option>\n                  <option value=\"20\">20张</option>\n                </select>\n              </div>\n\n              <div class=\"option-group\">\n                <label for=\"style\">风格:</label>\n                <select id=\"style\" v-model=\"presentationStyle\" class=\"select-input\">\n                  <option value=\"professional\">专业</option>\n                  <option value=\"academic\">学术</option>\n                  <option value=\"creative\">创意</option>\n                  <option value=\"minimal\">简约</option>\n                </select>\n              </div>\n            </div>\n\n            <button\n              @click=\"generatePresentation\"\n              :disabled=\"isGenerating || !prompt\"\n              class=\"btn btn-primary generate-btn\"\n            >\n              <span v-if=\"isGenerating\">\n                <span class=\"loading-spinner\"></span>\n                生成中...\n              </span>\n              <span v-else>生成演示文稿</span>\n            </button>\n          </div>\n\n          <div v-if=\"markdown\" class=\"output-section\">\n            <div class=\"section-header\">\n              <h3>生成的演示文稿</h3>\n              <div class=\"output-info\">\n                <span class=\"slide-count-badge\">{{ generatedSlideCount }}张幻灯片</span>\n              </div>\n            </div>\n\n            <div class=\"markdown-preview\">\n              <pre>{{ markdown }}</pre>\n            </div>\n\n            <div class=\"actions\">\n              <button @click=\"editMarkdown\" class=\"btn btn-secondary\">\n                <span class=\"icon\">✏️</span> 编辑\n              </button>\n              <button @click=\"previewPresentation\" class=\"btn btn-primary\">\n                <span class=\"icon\">👁️</span> 预览\n              </button>\n              <button @click=\"exportPDF\" class=\"btn btn-secondary\">\n                <span class=\"icon\">📄</span> PDF\n              </button>\n              <button @click=\"exportPPTX\" class=\"btn btn-secondary\">\n                <span class=\"icon\">📊</span> PPTX\n              </button>\n            </div>\n          </div>\n\n          <div v-else-if=\"modelLoaded && !isGenerating\" class=\"empty-output\">\n            <div class=\"empty-state\">\n              <div class=\"empty-icon\">🎬</div>\n              <h3>准备好创建演示文稿了吗？</h3>\n              <p>输入您的主题，AI将为您生成一个完整的演示文稿。</p>\n              <div class=\"example-prompts\">\n                <p>示例主题:</p>\n                <button\n                  v-for=\"(example, index) in examplePrompts\"\n                  :key=\"index\"\n                  @click=\"useExamplePrompt(example)\"\n                  class=\"example-btn\"\n                >\n                  {{ example }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n\n    <!-- 预览组件 -->\n    <MarpPreview\n      v-if=\"showPreview\"\n      :markdown=\"markdown\"\n      :initialTheme=\"selectedTheme\"\n      @close=\"showPreview = false\"\n      @theme-change=\"updateTheme\"\n      @export=\"handleExport\"\n    />\n\n    <!-- 设置对话框 -->\n    <div v-if=\"showSettings\" class=\"modal-overlay\" @click.self=\"showSettings = false\">\n      <div class=\"modal-container\">\n        <div class=\"modal-header\">\n          <h2>设置</h2>\n          <button class=\"close-btn\" @click=\"showSettings = false\">×</button>\n        </div>\n        <div class=\"modal-content\">\n          <div class=\"settings-section\">\n            <h3>模型设置</h3>\n            <div class=\"setting-group\">\n              <label for=\"model-service\">执行模式:</label>\n              <select id=\"model-service\" v-model=\"executionMode\" class=\"select-input\">\n                <option v-for=\"option in modelServiceOptions\" :key=\"option.id\" :value=\"option.id\">\n                  {{ option.name }}\n                </option>\n              </select>\n            </div>\n            <p class=\"setting-description\">\n              选择模型的执行方式。自动模式会根据您的浏览器和设备性能选择最佳方式。\n            </p>\n          </div>\n\n          <div class=\"settings-section\">\n            <h3>外观设置</h3>\n            <div class=\"setting-group\">\n              <label for=\"default-theme\">默认主题:</label>\n              <select id=\"default-theme\" v-model=\"selectedTheme\" class=\"select-input\">\n                <option v-for=\"theme in availableThemes\" :key=\"theme.id\" :value=\"theme.id\">\n                  {{ theme.name }}\n                </option>\n              </select>\n            </div>\n          </div>\n\n          <div class=\"settings-section\">\n            <h3>关于</h3>\n            <p>jsPPT 版本: 1.0.0</p>\n            <p>使用 Vue.js 和 Marp 构建</p>\n            <p>模型: Qwen 3.0-0.6B</p>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button @click=\"showSettings = false\" class=\"btn btn-primary\">确定</button>\n        </div>\n      </div>\n    </div>\n\n    <!-- 帮助对话框 -->\n    <div v-if=\"showHelp\" class=\"modal-overlay\" @click.self=\"showHelp = false\">\n      <div class=\"modal-container\">\n        <div class=\"modal-header\">\n          <h2>使用帮助</h2>\n          <button class=\"close-btn\" @click=\"showHelp = false\">×</button>\n        </div>\n        <div class=\"modal-content\">\n          <div class=\"help-section\">\n            <h3>快速开始</h3>\n            <ol class=\"help-steps\">\n              <li>在输入框中输入您的演示文稿主题</li>\n              <li>点击\"生成演示文稿\"按钮</li>\n              <li>等待AI生成内容</li>\n              <li>使用\"预览\"按钮查看效果</li>\n              <li>使用\"PDF\"或\"PPTX\"按钮导出</li>\n            </ol>\n          </div>\n\n          <div class=\"help-section\">\n            <h3>提示技巧</h3>\n            <ul class=\"help-tips\">\n              <li>使用具体、明确的主题描述获得更好的结果</li>\n              <li>可以指定目标受众，如\"面向高中生的太阳系介绍\"</li>\n              <li>可以指定风格，如\"简约风格的项目计划演示\"</li>\n              <li>生成后可以编辑Markdown内容进行自定义</li>\n            </ul>\n          </div>\n\n          <div class=\"help-section\">\n            <h3>键盘快捷键</h3>\n            <div class=\"shortcut-list\">\n              <div class=\"shortcut-item\">\n                <span class=\"shortcut-key\">Ctrl+Enter</span>\n                <span class=\"shortcut-desc\">生成演示文稿</span>\n              </div>\n              <div class=\"shortcut-item\">\n                <span class=\"shortcut-key\">Esc</span>\n                <span class=\"shortcut-desc\">关闭预览</span>\n              </div>\n              <div class=\"shortcut-item\">\n                <span class=\"shortcut-key\">←/→</span>\n                <span class=\"shortcut-desc\">预览中切换幻灯片</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button @click=\"showHelp = false\" class=\"btn btn-primary\">了解了</button>\n        </div>\n      </div>\n    </div>\n\n    <footer class=\"app-footer\">\n      <div class=\"container\">\n        <p>&copy; {{ new Date().getFullYear() }} jsPPT - 基于Web技术的AI演示文稿生成器</p>\n      </div>\n    </footer>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, onBeforeUnmount, watch } from 'vue';\nimport MarpPreview from './components/MarpPreview.vue';\nimport modelServiceFactory from './services/modelServiceFactory';\nimport { previewPresentation, exportToPDF, exportToPPTX, getAvailableThemes } from './services/exportService';\nimport compatibilityService from './services/compatibilityService';\n\nexport default {\n  components: {\n    MarpPreview\n  },\n  setup() {\n    // 状态变量\n    const modelLoaded = ref(false);\n    const isLoading = ref(false);\n    const progress = ref(0);\n    const loadingStage = ref('准备中');\n    const prompt = ref('');\n    const markdown = ref('');\n    const isGenerating = ref(false);\n    const showPreview = ref(false);\n    const showSettings = ref(false);\n    const showHelp = ref(false);\n    const isEditingMarkdown = ref(false);\n    const modelService = ref(null);\n    const executionMode = ref('wasm'); // 默认使用CPU模式\n    const selectedTheme = ref('default');\n    const slideCount = ref('auto');\n    const presentationStyle = ref('professional');\n    const generatedSlideCount = ref(0);\n    const availableThemes = ref(getAvailableThemes());\n    const modelServiceOptions = ref(modelServiceFactory.getModelServiceOptions());\n    const compatibilityInfo = ref({\n      supported: false,\n      accelerationMethod: '',\n      reason: '正在检测兼容性...'\n    });\n\n    // 示例提示词\n    const examplePrompts = [\n      '人工智能在医疗领域的应用与未来发展',\n      '可持续发展与环保科技创新',\n      '数字化转型对企业的影响',\n      '太空探索的历史与未来展望',\n      '现代教育技术与学习方式变革'\n    ];\n\n    // 计算属性\n    const progressText = computed(() => {\n      const percentage = Math.round(progress.value * 100);\n      return `${percentage}%`;\n    });\n\n    // 监听执行模式变化\n    watch(executionMode, (newMode) => {\n      console.log('执行模式已更改为:', newMode);\n      // 如果模型已加载，提示用户需要重新加载\n      if (modelLoaded.value) {\n        alert('执行模式已更改，需要重新加载模型才能生效。');\n      }\n    });\n\n    // 监听markdown变化，计算幻灯片数量\n    watch(markdown, (newMarkdown) => {\n      if (newMarkdown) {\n        // 计算幻灯片数量（通过计算 \"---\" 分隔符的数量 + 1）\n        const separatorCount = (newMarkdown.match(/\\n---\\n/g) || []).length;\n        generatedSlideCount.value = separatorCount + 1;\n      } else {\n        generatedSlideCount.value = 0;\n      }\n    });\n\n    // 检查浏览器兼容性\n    const checkCompatibility = async () => {\n      try {\n        const compatibilityReport = await compatibilityService.getFullCompatibilityReport();\n        console.log('兼容性报告:', compatibilityReport);\n\n        if (compatibilityReport.webgpu.supported) {\n          compatibilityInfo.value = {\n            supported: true,\n            accelerationMethod: 'WebGPU',\n            reason: ''\n          };\n          return;\n        }\n\n        if (compatibilityReport.webgl.supported) {\n          compatibilityInfo.value = {\n            supported: true,\n            accelerationMethod: 'WebGL',\n            reason: ''\n          };\n          return;\n        }\n\n        // 检查设备性能\n        if (compatibilityReport.performance.performanceTier !== 'low') {\n          compatibilityInfo.value = {\n            supported: true,\n            accelerationMethod: 'WASM',\n            reason: ''\n          };\n          return;\n        }\n\n        compatibilityInfo.value = {\n          supported: false,\n          accelerationMethod: '',\n          reason: '您的设备性能可能不足以流畅运行AI模型。建议使用最新版Chrome或Edge浏览器，或使用性能更好的设备。'\n        };\n      } catch (error) {\n        console.error('兼容性检测失败:', error);\n        compatibilityInfo.value = {\n          supported: false,\n          accelerationMethod: '',\n          reason: '兼容性检测失败，建议使用最新版Chrome或Edge浏览器。'\n        };\n      }\n    };\n\n    // 加载模型\n    const loadModel = async () => {\n      if (isLoading.value) return;\n\n      isLoading.value = true;\n      progress.value = 0;\n      loadingStage.value = '准备中';\n\n      try {\n        // 创建适合当前浏览器的模型服务\n        const options = {\n          forceService: executionMode.value === 'auto' ? null : executionMode.value\n        };\n\n        loadingStage.value = '初始化模型服务';\n        modelService.value = await modelServiceFactory.createModelService(options);\n\n        // 加载模型\n        await modelService.value.loadModel({\n          onProgress: (p) => {\n            progress.value = p;\n\n            // 获取当前加载阶段\n            if (modelService.value.getLoadingStage) {\n              loadingStage.value = modelService.value.getLoadingStage();\n            } else {\n              // 兼容旧版模型服务\n              if (p < 0.1) {\n                loadingStage.value = '准备下载';\n              } else if (p < 0.8) {\n                loadingStage.value = '下载模型文件';\n              } else if (p < 0.9) {\n                loadingStage.value = '加载模型到内存';\n              } else {\n                loadingStage.value = '初始化模型';\n              }\n            }\n          },\n          onSuccess: () => {\n            modelLoaded.value = true;\n            loadingStage.value = '加载完成';\n          },\n          onError: (error) => {\n            alert(`模型加载失败: ${error.message}`);\n            loadingStage.value = '加载失败';\n          }\n        });\n      } catch (error) {\n        console.error('模型加载失败:', error);\n        alert(`模型加载失败: ${error.message}`);\n        loadingStage.value = '加载失败';\n      } finally {\n        isLoading.value = false;\n      }\n    };\n\n    // 生成演示文稿\n    const generatePresentation = async () => {\n      if (!prompt.value || isGenerating.value) return;\n\n      isGenerating.value = true;\n\n      try {\n        // 构建完整提示词，包含幻灯片数量和风格\n        let fullPrompt = prompt.value;\n\n        if (slideCount.value !== 'auto') {\n          fullPrompt += `\\n请生成${slideCount.value}张幻灯片。`;\n        }\n\n        if (presentationStyle.value !== 'professional') {\n          const styleMap = {\n            academic: '学术',\n            creative: '创意',\n            minimal: '简约'\n          };\n          fullPrompt += `\\n风格要求：${styleMap[presentationStyle.value]}。`;\n        }\n\n        // 生成Markdown\n        const result = await modelService.value.generateMarpMarkdown(fullPrompt);\n\n        // 确保Markdown包含主题设置\n        if (result.includes('theme:')) {\n          markdown.value = result.replace(/theme:.*\\n/, `theme: ${selectedTheme.value}\\n`);\n        } else {\n          const metadataEnd = result.indexOf('---\\n\\n');\n          if (metadataEnd > 0) {\n            markdown.value = result.slice(0, metadataEnd) + `theme: ${selectedTheme.value}\\n` + result.slice(metadataEnd);\n          } else {\n            markdown.value = result;\n          }\n        }\n      } catch (error) {\n        console.error('生成失败:', error);\n        alert(`生成失败: ${error.message}`);\n      } finally {\n        isGenerating.value = false;\n      }\n    };\n\n    // 清空提示词\n    const clearPrompt = () => {\n      prompt.value = '';\n    };\n\n    // 插入模板\n    const insertTemplate = () => {\n      prompt.value = '请为我创建一个关于[主题]的演示文稿，目标受众是[受众]，风格要求[风格]。';\n    };\n\n    // 使用示例提示词\n    const useExamplePrompt = (example) => {\n      prompt.value = example;\n    };\n\n    // 编辑Markdown\n    const editMarkdown = () => {\n      isEditingMarkdown.value = true;\n      // 这里可以添加Markdown编辑器的逻辑\n      alert('Markdown编辑功能即将推出，敬请期待！');\n    };\n\n    // 预览演示文稿\n    const handlePreviewPresentation = () => {\n      showPreview.value = true;\n    };\n\n    // 更新主题\n    const updateTheme = (theme) => {\n      selectedTheme.value = theme;\n    };\n\n    // 处理导出事件\n    const handleExport = (exportInfo) => {\n      console.log('导出信息:', exportInfo);\n      // 可以在这里添加导出统计或其他逻辑\n    };\n\n    // 导出为PDF\n    const handleExportPDF = async () => {\n      try {\n        await exportToPDF(markdown.value, 'presentation.pdf', selectedTheme.value);\n      } catch (error) {\n        console.error('PDF导出失败:', error);\n        alert(`PDF导出失败: ${error.message}`);\n      }\n    };\n\n    // 导出为PPTX\n    const handleExportPPTX = async () => {\n      try {\n        await exportToPPTX(markdown.value, 'presentation.pptx', selectedTheme.value);\n      } catch (error) {\n        console.error('PPTX导出失败:', error);\n        alert(`PPTX导出失败: ${error.message}`);\n      }\n    };\n\n    // 键盘快捷键处理\n    const handleKeyDown = (e) => {\n      // Ctrl+Enter 生成演示文稿\n      if (e.ctrlKey && e.key === 'Enter' && !isGenerating.value && prompt.value) {\n        generatePresentation();\n      }\n\n      // Esc 关闭预览\n      if (e.key === 'Escape') {\n        if (showPreview.value) showPreview.value = false;\n        if (showSettings.value) showSettings.value = false;\n        if (showHelp.value) showHelp.value = false;\n      }\n    };\n\n    // 组件挂载时自动检查兼容性\n    onMounted(() => {\n      checkCompatibility();\n\n      // 添加键盘事件监听\n      window.addEventListener('keydown', handleKeyDown);\n\n      // 自动加载模型（可选）\n      // loadModel();\n    });\n\n    // 组件卸载前释放模型资源\n    onBeforeUnmount(() => {\n      if (modelService.value) {\n        modelService.value.unloadModel();\n      }\n\n      // 移除键盘事件监听\n      window.removeEventListener('keydown', handleKeyDown);\n    });\n\n    return {\n      // 状态\n      modelLoaded,\n      isLoading,\n      progress,\n      loadingStage,\n      prompt,\n      markdown,\n      isGenerating,\n      showPreview,\n      showSettings,\n      showHelp,\n      isEditingMarkdown,\n      executionMode,\n      selectedTheme,\n      slideCount,\n      presentationStyle,\n      generatedSlideCount,\n      availableThemes,\n      modelServiceOptions,\n      compatibilityInfo,\n      examplePrompts,\n\n      // 计算属性\n      progressText,\n\n      // 方法\n      loadModel,\n      generatePresentation,\n      clearPrompt,\n      insertTemplate,\n      useExamplePrompt,\n      editMarkdown,\n      previewPresentation: handlePreviewPresentation,\n      updateTheme,\n      handleExport,\n      exportPDF: handleExportPDF,\n      exportPPTX: handleExportPPTX\n    };\n  }\n};\n</script>\n\n<style>\n:root {\n  --color-primary: #4361ee;\n  --color-secondary: #3a0ca3;\n  --color-accent: #f72585;\n  --color-text: #333333;\n  --color-text-light: #666666;\n  --color-background: #f5f7fa;\n  --color-card: #ffffff;\n  --color-border: #e1e4e8;\n\n  --spacing-xs: 0.25rem;\n  --spacing-sm: 0.5rem;\n  --spacing-md: 1rem;\n  --spacing-lg: 2rem;\n  --spacing-xl: 3rem;\n\n  --radius-sm: 4px;\n  --radius-md: 8px;\n  --radius-lg: 16px;\n\n  --shadow-sm: 0 2px 4px rgba(0, 0, 0, 0.05);\n  --shadow-md: 0 4px 8px rgba(0, 0, 0, 0.1);\n  --shadow-lg: 0 8px 16px rgba(0, 0, 0, 0.1);\n\n  --font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n}\n\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  font-family: var(--font-family);\n  color: var(--color-text);\n  background-color: var(--color-background);\n  line-height: 1.6;\n}\n\n.container {\n  width: 100%;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 var(--spacing-md);\n}\n\n.btn {\n  display: inline-block;\n  padding: 0.75rem 1.5rem;\n  border-radius: var(--radius-md);\n  font-weight: 600;\n  text-align: center;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  border: none;\n  font-size: 1rem;\n}\n\n.btn-primary {\n  background-color: var(--color-primary);\n  color: white;\n}\n\n.btn-primary:hover {\n  background-color: var(--color-secondary);\n}\n\n.btn-secondary {\n  background-color: white;\n  color: var(--color-primary);\n  border: 1px solid var(--color-primary);\n}\n\n.btn-secondary:hover {\n  background-color: var(--color-primary);\n  color: white;\n}\n\n.btn:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.app-container {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n}\n\n.app-header {\n  background: linear-gradient(135deg, var(--color-primary), var(--color-secondary));\n  color: white;\n  padding: var(--spacing-md) 0;\n  text-align: center;\n}\n\n.app-title {\n  font-size: 2rem;\n  margin-bottom: var(--spacing-xs);\n}\n\n.app-subtitle {\n  font-size: 1.2rem;\n  opacity: 0.9;\n}\n\n.app-main {\n  flex: 1;\n  padding: var(--spacing-lg) 0;\n}\n\n.app-footer {\n  background-color: var(--color-text);\n  color: white;\n  padding: var(--spacing-md) 0;\n  text-align: center;\n  margin-top: auto;\n}\n\n.model-loading {\n  text-align: center;\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n.progress-bar {\n  height: 20px;\n  background-color: var(--color-border);\n  border-radius: var(--radius-md);\n  margin: var(--spacing-md) 0;\n  overflow: hidden;\n}\n\n.progress {\n  height: 100%;\n  background-color: var(--color-primary);\n  transition: width 0.3s ease;\n}\n\n.progress-text {\n  margin-bottom: var(--spacing-md);\n}\n\n.compatibility-info {\n  margin-top: var(--spacing-lg);\n  padding: var(--spacing-md);\n  background-color: var(--color-card);\n  border-radius: var(--radius-md);\n  box-shadow: var(--shadow-sm);\n}\n\n.warning {\n  color: #e63946;\n}\n\n.editor-container {\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: var(--spacing-lg);\n}\n\n@media (min-width: 992px) {\n  .editor-container {\n    grid-template-columns: 1fr 1fr;\n  }\n}\n\n.input-section, .output-section {\n  background-color: var(--color-card);\n  padding: var(--spacing-lg);\n  border-radius: var(--radius-md);\n  box-shadow: var(--shadow-md);\n}\n\n.prompt-input {\n  width: 100%;\n  padding: var(--spacing-md);\n  border: 1px solid var(--color-border);\n  border-radius: var(--radius-md);\n  font-family: var(--font-family);\n  font-size: 1rem;\n  margin: var(--spacing-md) 0;\n  resize: vertical;\n}\n\n.generate-btn {\n  width: 100%;\n}\n\n.markdown-preview {\n  background-color: var(--color-background);\n  padding: var(--spacing-md);\n  border-radius: var(--radius-md);\n  margin: var(--spacing-md) 0;\n  max-height: 400px;\n  overflow-y: auto;\n  white-space: pre-wrap;\n  font-family: monospace;\n}\n\n.actions {\n  display: flex;\n  gap: var(--spacing-md);\n  justify-content: center;\n  margin-top: var(--spacing-md);\n}\n\n@media (max-width: 768px) {\n  .actions {\n    flex-direction: column;\n  }\n\n  .btn {\n    width: 100%;\n    margin-bottom: var(--spacing-sm);\n  }\n}\n</style>\n","import { createApp } from 'vue'\nimport App from './App.vue'\n\n// 创建Vue应用实例\nconst app = createApp(App)\n\n// 全局错误处理\napp.config.errorHandler = (err, vm, info) => {\n  console.error('全局错误:', err);\n  console.error('错误信息:', info);\n  \n  // 在生产环境中可以添加错误上报逻辑\n  if (process.env.NODE_ENV === 'production') {\n    // 错误上报逻辑\n  }\n};\n\n// 挂载应用\napp.mount('#app')\n"],"file":"assets/index-e55c9349.js"}